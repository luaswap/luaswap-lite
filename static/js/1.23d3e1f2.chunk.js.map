{"version":3,"sources":["src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/ChangeNetwork.tsx","src/components/ErrorMessage.tsx","src/components/InfoBox.tsx","src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/FetchingButton.tsx","src/components/ItemSeparator.tsx","src/components/TokenLogo.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","src/components/ApproveButton.tsx","src/components/Selectable.tsx","src/components/Notice.tsx","src/components/Input.tsx","src/components/Loading.tsx","assets/empty-token.png","assets/ETH.png","src/components/CloseIcon.tsx","src/components/Expandable.tsx","src/components/TokenAmount.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/components/Select.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenName.tsx","src/hooks/useWeth.tsx","src/hooks/useTokenPairState.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/UnsupportedButton.tsx","src/components/SelectTokenable.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx"],"names":["Heading","props","useColors","accent","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","ChangeNetwork","chainId","t","useTranslation","networkName","88","56","justifyContent","light","textAlign","marginVertical","large","ErrorMessage","error","borderColor","borderWidth","width","padding","marginTop","code","color","note","message","InfoBox","darkMode","useContext","GlobalContext","backgroundLight","borderDark","border","useStyles","radius","backgroundColor","AmountMeta","textDark","textLight","placeholder","normal","amount","suffix","InsufficientBalanceButton","symbol","title","borderRadius","FetchingButton","ITEM_SEPARATOR_HEIGHT","ItemSeparator","TokenLogo","useState","setError","size","require","ETH","source","replaceWETH","isWrappedNativeToken","token","uri","logoURI","onError","opacity","Meta","textMedium","onPress","useLinker","url","label","undefined","textDecorationLine","MaxButton","onPressMax","a","async","balance","isNativeToken","fee","pow10","gt","sub","ethers","constants","Zero","trc21Fee","updateAmount","formatBalance","decimals","position","right","bottom","type","maxButtonText","buttonStyle","paddingHorizontal","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","keyboardType","autoFocus","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","hideMaxButton","ApproveButton","approveToken","EthersContext","loading","setLoading","address","spender","tx","wait","onSuccess","hidden","containerStyle","Selectable","overlay","backgroundLightBox","background","hovered","activeOpacity","underlayColor","selected","Notice","borderStyle","clear","buttonText","onPressButton","titleStyle","paddingVertical","alignSelf","Input","errors","forbidden","forEach","validation","match","regexp","allowed","join","inputStyle","minHeight","outline","placeholderTextColor","errorStyle","Loading","module","exports","CloseIcon","name","marginLeft","Expandable","expanded","setExpanded","shouldExpand","onExpand","display","children","TokenAmount","caption","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","Item","selectable","setOption","option","description","Select","flexDirection","options","map","key","marginHorizontal","useDelayedEffect","timeout","toString","TokenName","numberOfLines","ellipsizeMode","useWeth","wrapETH","signer","weth","getContract","WETH","estimateGas","deposit","gasLimit","logTransaction","unwrapETH","withdraw","useTokenPairState","tokens","updateTokens","getTokenAllowance","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","onUnwrap","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","UnsupportedButton","state","SelectTokenable","TouchableHighlight","View","ActivityIndicator","TokenItem","onSelectToken","FlexView","Button","duplicate","TokenSearch","provider","tokenToAdd","setTokenToAdd","findIndex","tk","trim","utils","isAddress","findOrFetchToken","zIndex","marginRight","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","FlatList","keyExtractor","EmptyList","margin","Text","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","toLowerCase","onChangeSymbol","top","shadowColor","shadowRadius","maxHeight","includes"],"mappings":"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","file":"static/js/1.23d3e1f2.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle, View } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <View style={{ alignItems: \"flex-start\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 20 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {/* {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )} */}\n        </View>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nconst ChangeNetwork = ({ chainId = 88 }) => {\n    const t = useTranslation();\n    const networkName = {\n        // 1: \"Ethereum Mainnet\",\n        // 42: \"Ethereum Kovan\",\n        88: \"TomoChain Mainnet\",\n        56: \"Binance Smart Chain Mainnet\"\n    }[chainId];\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Text light={true} style={{ textAlign: \"center\", marginVertical: Spacing.large }}>\n                {t(\"change-network-to\", { networkName })}\n            </Text>\n        </View>\n    );\n};\n\nexport default ChangeNetwork;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React, { PropsWithChildren, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { backgroundLight, borderDark } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ radius: 20, color: darkMode ? borderDark : backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    // marginTop: !IS_DESKTOP ? Spacing.normal + Spacing.small : 0,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} style={{ borderRadius: 15 }} />;\n};\nexport default InsufficientBalanceButton;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"fetching\")} disabled={true} style={{ borderRadius: 15 }} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React, { useContext, useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { isWrappedNativeToken } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && isWrappedNativeToken(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const t = useTranslation();\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"---\"\n        : props.text\n            ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n            : t(\"fetching\");\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4, paddingBottom: 10 }}>\n            <Text note={!IS_DESKTOP} style={{ color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                note={!IS_DESKTOP}\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\",\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { BigNumber, ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n// import useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isNativeToken, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n    trc21Fee?: BigNumber;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    // const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    keyboardType={\"numeric\"}\n                    autoFocus={props.autoFocus || false}\n                    // inputStyle={{ marginHorizontal: Spacing.tiny }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                // containerStyle={{\n                //     ...border(),\n                //     paddingHorizontal: Spacing.tiny,\n                //     paddingVertical: 15\n                //     // paddingTop: 15,\n                //     // paddingBottom: 2\n                // }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                        trc21Fee={props.trc21Fee}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string; trc21Fee?: BigNumber }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(async () => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (isNativeToken(props.token)) {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            } else if (props.trc21Fee) {\n                balance = balance.gt(props.trc21Fee) ? balance.sub(props.trc21Fee) : ethers.constants.Zero\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount, props.trc21Fee]);\n\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 17 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\nfunction signer(arg0: string, address: string, signer: any, Signer: typeof ethers.Signer) {\n    throw new Error(\"Function not implemented.\");\n}\n\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n            style={{ borderRadius: 15 }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLightBox } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : backgroundLightBox }),\n                                // backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                                backgroundColor: '#353535',\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color, fontSize: IS_DESKTOP ? 13 : 10 }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const { border } = useStyles();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                border(),\n                { fontSize, fontFamily: \"regular\", paddingVertical: 10, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { textDark } = useColors();\n    return <Icon \n    type={\"material-community\"}\n    name={\"close\"}\n    size={13}\n    color={textDark}\n    style={{ \n        marginLeft: 10,\n        backgroundColor: '#7B7B7B',\n        borderRadius: 50,\n        padding: 3\n    }} />;\n};\n\nexport default CloseIcon;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const t = useTranslation();\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : t(\"change\");\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP}\n        disabled={props.disabled}\n        style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface Option {\n    key: string;\n    title: string;\n    description: string;\n}\n\nexport interface SelectProps {\n    title: string;\n    options: Option[];\n    option?: Option;\n    setOption: (option?: Option) => void;\n}\n\nconst Select: FC<SelectProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n\n    return (\n        <View>\n            {/* <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}> */}\n            <FlexView style={{ width: '100%', flexDirection: IS_DESKTOP ? 'row' : 'column' }}>\n                {props.options.map(option => (\n                    <View key={option.key} style={{\n                        flex: 1,\n                        borderRadius: 15,\n                        justifyContent: \"space-between\",\n                        marginHorizontal: IS_DESKTOP ? 10 : 0,\n                        marginBottom: !IS_DESKTOP ? 5 : 0\n                    }}>\n                        <Item\n                            key={option.key}\n                            option={option}\n                            setOption={props.setOption}\n                            selected={option.key === props.option?.key}\n                        />\n                    </View>\n                ))}\n            </FlexView>\n            {/* </Expandable> */}\n            {/* {props.option && (\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\n            )} */}\n        </View>\n    );\n};\n\nconst Item = (props: {\n    option: Option;\n    setOption?: (option?: Option) => void;\n    selected: boolean;\n    selectable?: boolean;\n}) => {\n    return (\n        <Selectable\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\n            style={{ padding: IS_DESKTOP ? 20 : 10, minHeight: IS_DESKTOP ? 102 : 82, backgroundColor: \"#464646\", borderRadius: 15 }}\n            selected={props.selected}\n            disabled={props.selectable}\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View style={{ flex: 1 }}>\n                    <Text fontWeight={\"regular\"}>{props.option.title}</Text>\n                    <Text note={true} style={{ marginTop: 4 }}>\n                        {props.option.description}\n                    </Text>\n                </View>\n                {/* {props.selected ? <CloseIcon /> : <SelectIcon />} */}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default Select;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        fontWeight={\"bold\"}\n        disabled={props.disabled}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import { useCallback } from \"react\";\nimport { WETH } from \"@luaswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nconst useWeth = (chainId = 88) => {\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const weth = getContract(\"IWETH\", WETH[chainId].address, signer);\n            const gasLimit = await weth.estimateGas.deposit({\n                value: amount\n            });\n            const tx = await weth.deposit({\n                value: amount,\n                gasLimit\n            });\n            return await logTransaction(tx, \"WETH.deposit()\");        \n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[chainId].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");        \n        \n    }, []);\n\n    return {\n        wrapETH,\n        unwrapETH\n    };\n};\n\nexport default useWeth;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { isNativeToken, parseBalance } from \"../utils\";\nimport useWeth from \"./useWeth\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { signer, address, tokens, updateTokens, getTokenAllowance, chainId } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useWeth(chainId);\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (!isNativeToken(fromToken)) {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (!isNativeToken(toToken)) {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    const t = useTranslation();\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} style={{ borderRadius: 15 }} />;\n};\n\nexport default UnsupportedButton;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst SelectTokenable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {/* {({ hovered }) => ( */}\n            <TouchableHighlight underlayColor={overlay} onPress={props.onPress}>\n                <View\n                    {...props}\n                    style={[\n                        {\n                            ...border({ color: props.selected ? borderDark : backgroundLight }),\n                            paddingHorizontal: 10,\n                            paddingVertical: 5\n                        },\n                        props.style\n                    ]}\n                />\n            </TouchableHighlight>\n            {/* )} */}\n        </Hoverable>\n    );\n};\n\nexport default SelectTokenable;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const t = useTranslation();\n    // const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View style={{ zIndex: 1 }}>\n            <FlexView style={{ marginBottom: Spacing.small, }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={t(\"token-name-symbol-or-address\")}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ fontSize: props.text ? 20 : 16, borderWidth: 0 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0, backgroundColor: \"#353535\", borderRadius: 15 }}\n                    labelStyle={{ height: 0 }}\n                // containerStyle={{\n                //     ...border(),\n                //     paddingHorizontal: Spacing.tiny,\n                //     paddingTop: 12,\n                //     paddingBottom: 0\n                // }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const t = useTranslation();\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport Button from \"./Button\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport Heading from \"./Heading\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport SelectTokenable from \"./SelectTokenable\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenPrice from \"./TokenPrice\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\nimport TokenValue from \"./TokenValue\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n\n    useEffect(() => {\n        setSearch(\"\")\n    }, [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <View style={{\n                    position: 'absolute',\n                    width: '100%',\n                    backgroundColor: '#353535',\n                    borderRadius: 15,\n                    padding: IS_DESKTOP ? 15 : 0,\n                    top: 55,\n                    shadowColor: \"#2d2d2d\",\n                    shadowRadius: 15,\n                    maxHeight: 300\n                }}>\n                    <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n                </View>\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\n// const TokenSelected = (props: {\n//     onSelectToken: (token: Token) => void,\n//     showTokenList: boolean,\n// }) => {\n//     return (\n//         <View>\n//             <Text>test</Text>\n\n//         </View>\n//     )\n// }\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    const t = useTranslation();\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {t(\"you-dont-have-assets\")}\n            </Text>\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem = (props: {\n    token: TokenWithValue;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <SelectTokenable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                // marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <View>\n                    {props.token.priceUSD !== null && (\n                        <TokenPrice\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ marginLeft: Spacing.small }}\n                        />\n                    )}\n                    <TokenName token={props.token} disabled={props.disabled} />\n                </View>\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\n                    <FlexView>\n                        <TokenAmount\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ flex: 1, textAlign: \"right\", fontWeight: \"bold\" }}\n                        />\n                        {/* {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />} */}\n                    </FlexView>\n                </View>\n                {props.selected && <CloseIcon />}\n            </FlexView>\n        </SelectTokenable>\n    );\n};\n\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\n    const value2 = t2?.valueUSD || 0;\n    const value1 = t1?.valueUSD || 1;\n    if (value2 === value1) {\n        return (\n            (t2.balance.isZero() ? 0 : 10000000000) -\n            (t1.balance.isZero() ? 0 : 10000000000) +\n            t1.symbol.localeCompare(t2.symbol)\n        );\n    }\n    return value2 - value1;\n};\n\nexport default TokenSelect;\n"],"sourceRoot":""}