{"version":3,"sources":["src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/ChangeNetwork.tsx","src/components/ErrorMessage.tsx","src/components/InfoBox.tsx","src/components/Border.tsx","src/components/FetchingButton.tsx","src/components/ItemSeparator.tsx","src/components/TokenLogo.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","src/components/Selectable.tsx","src/components/web/WebFooter.tsx","index.tsx","src/components/Input.tsx","src/components/Loading.tsx","assets/empty-token.png","assets/ETH.png","assets/flags/us.png","assets/flags/cn.png","assets/flags/kr.png","assets/flags/fr.png","assets/flags/es.png","assets/flags/jp.png","src/components/CloseIcon.tsx","src/components/Expandable.tsx","src/components/LPTokenSelect.tsx","src/components/SelectIcon.tsx","src/hooks/useLPTokensState.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useWeth.tsx","src/hooks/useTokenPairState.tsx"],"names":["Heading","props","useColors","accent","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","ChangeNetwork","chainId","t","useTranslation","networkName","88","56","justifyContent","light","textAlign","marginVertical","large","ErrorMessage","error","borderColor","borderWidth","width","padding","marginTop","code","color","note","message","InfoBox","darkMode","useContext","GlobalContext","backgroundLight","borderDark","border","useStyles","radius","backgroundColor","Border","FetchingButton","title","borderRadius","ITEM_SEPARATOR_HEIGHT","ItemSeparator","TokenLogo","useState","setError","size","placeholder","require","ETH","source","replaceWETH","isWrappedNativeToken","token","uri","logoURI","onError","opacity","Meta","textMedium","textLight","onPress","useLinker","url","suffix","label","undefined","textDecorationLine","MaxButton","onPressMax","a","async","balance","isNativeToken","fee","pow10","gt","sub","ethers","constants","Zero","trc21Fee","updateAmount","formatBalance","decimals","position","right","bottom","type","maxButtonText","symbol","buttonStyle","paddingHorizontal","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","amount","keyboardType","autoFocus","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","hideMaxButton","Selectable","overlay","backgroundLightBox","background","containerStyle","hovered","activeOpacity","underlayColor","selected","FLAGS","us","cn","kr","fr","es","jp","Flag","name","locale","location","useLocation","pathname","marginHorizontal","WebFooter","simple","normal","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","children","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","Pressable","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState","ScrollView","FlatList","VirtualizedList","Input","textDark","errors","forbidden","forEach","validation","match","regexp","allowed","join","inputStyle","paddingVertical","minHeight","outline","placeholderTextColor","errorStyle","Loading","module","exports","CloseIcon","marginLeft","Expandable","expanded","setExpanded","shouldExpand","buttonText","onPressButton","onExpand","display","LPTokenList","state","emptyText","Item","renderItem","item","key","onSelectToken","setSelectedLPToken","data","lpTokens","sort","p1","p2","m1","multiplier","m2","apy","loading","EmptyList","keyExtractor","margin","LPTokenItem","tokenA","tokenB","caption","LPTokenSelect","selectedLPToken","SelectIcon","updatingLPTokens","useLPTokensState","mode","useTokenPairState","EthersContext","provider","address","tokens","lastTimeRefreshed","setLastTimeRefreshed","setLoading","setLPTokens","selectedLPTokenAllowed","setSelectedLPTokenAllowed","pair","setPair","setAmount","getPair","useSDK","updateLPTokens","fetchMyPools","fetchPools","fetchMyLPTokens","fetchMyUniswapLPTokens","useEffect","useAsyncEffect","useDelayedOnBlockEffect","block","fromToken","toToken","updateLastTimeRefreshed","Date","now","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","setTimeout","handles","handle","clearTimeout","useWeth","wrapETH","signer","weth","getContract","WETH","estimateGas","deposit","gasLimit","tx","logTransaction","unwrapETH","withdraw","updateTokens","getTokenAllowance","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","wrapping","setWrapping","unwrapping","setUnwrapping","find","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","wait","onUnwrap"],"mappings":"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","file":"static/js/0.ac0349ab.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle, View } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <View style={{ alignItems: \"flex-start\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 20 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {/* {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )} */}\n        </View>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nconst ChangeNetwork = ({ chainId = 88 }) => {\n    const t = useTranslation();\n    const networkName = {\n        // 1: \"Ethereum Mainnet\",\n        // 42: \"Ethereum Kovan\",\n        88: \"TomoChain Mainnet\",\n        56: \"Binance Smart Chain Mainnet\"\n    }[chainId];\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Text light={true} style={{ textAlign: \"center\", marginVertical: Spacing.large }}>\n                {t(\"change-network-to\", { networkName })}\n            </Text>\n        </View>\n    );\n};\n\nexport default ChangeNetwork;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React, { PropsWithChildren, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { backgroundLight, borderDark } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ radius: 20, color: darkMode ? borderDark : backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    // marginTop: !IS_DESKTOP ? Spacing.normal + Spacing.small : 0,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"fetching\")} disabled={true} style={{ borderRadius: 15 }} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React, { useContext, useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { isWrappedNativeToken } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && isWrappedNativeToken(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const t = useTranslation();\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"---\"\n        : props.text\n            ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n            : t(\"fetching\");\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4, paddingBottom: 10 }}>\n            <Text note={!IS_DESKTOP} style={{ color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                note={!IS_DESKTOP}\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\",\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { BigNumber, ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n// import useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isNativeToken, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n    trc21Fee?: BigNumber;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    // const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    keyboardType={\"numeric\"}\n                    autoFocus={props.autoFocus || false}\n                    // inputStyle={{ marginHorizontal: Spacing.tiny }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                // containerStyle={{\n                //     ...border(),\n                //     paddingHorizontal: Spacing.tiny,\n                //     paddingVertical: 15\n                //     // paddingTop: 15,\n                //     // paddingBottom: 2\n                // }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                        trc21Fee={props.trc21Fee}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string; trc21Fee?: BigNumber }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(async () => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (isNativeToken(props.token)) {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            } else if (props.trc21Fee) {\n                balance = balance.gt(props.trc21Fee) ? balance.sub(props.trc21Fee) : ethers.constants.Zero\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount, props.trc21Fee]);\n\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 17 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\nfunction signer(arg0: string, address: string, signer: any, Signer: typeof ethers.Signer) {\n    throw new Error(\"Function not implemented.\");\n}\n\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLightBox } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : backgroundLightBox }),\n                                // backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                                backgroundColor: '#353535',\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst FLAGS = {\n    us: require(\"../../../assets/flags/us.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\"),\n    fr: require(\"../../../assets/flags/fr.png\"),\n    es: require(\"../../../assets/flags/es.png\"),\n    jp: require(\"../../../assets/flags/jp.png\")\n};\n\nconst ALCHEMY_URL = \"https://dashboard.alchemyapi.io/signup?referral=429fb682-0d85-40ab-ad88-daf847cf7c63\";\n\nconst WebFooter = ({ simple = false }) => {\n    const onPressAlchemy = useLinker(ALCHEMY_URL, \"\", \"_blank\");\n    return (\n        <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n            {/* {!simple && (\n                <>\n                    <SocialIcons />\n                    <TouchableHighlight onPress={onPressAlchemy}>\n                        <Image\n                            source={require(\"../../../assets/alchemy.png\")}\n                            style={{ width: 188, height: 40, marginTop: Spacing.tiny }}\n                        />\n                    </TouchableHighlight>\n                </>\n            )}\n            <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                Built with ❤️ by SushiSwap (v{Constants.manifest.version})\n            </Text> */}\n            <FlexView style={{ marginTop: Spacing.small }}>\n                <Flag name={\"us\"} locale={\"en\"} />\n                <Flag name={\"es\"} locale={\"es\"} />\n                <Flag name={\"fr\"} locale={\"fr\"} />\n                <Flag name={\"cn\"} locale={\"zh\"} />\n                <Flag name={\"jp\"} locale={\"jp\"} />\n                <Flag name={\"kr\"} locale={\"ko\"} />\n            </FlexView>\n        </View>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={FLAGS[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const { border } = useStyles();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                border(),\n                { fontSize, fontFamily: \"regular\", paddingVertical: 10, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","module.exports = __webpack_public_path__ + \"static/media/us.d367121f.png\";","module.exports = __webpack_public_path__ + \"static/media/cn.baedda5d.png\";","module.exports = __webpack_public_path__ + \"static/media/kr.146730ea.png\";","module.exports = __webpack_public_path__ + \"static/media/fr.dda60be7.png\";","module.exports = __webpack_public_path__ + \"static/media/es.82844a36.png\";","module.exports = __webpack_public_path__ + \"static/media/jp.27444bf9.png\";","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { textDark } = useColors();\n    return <Icon \n    type={\"material-community\"}\n    name={\"close\"}\n    size={13}\n    color={textDark}\n    style={{ \n        marginLeft: 10,\n        backgroundColor: '#7B7B7B',\n        borderRadius: 50,\n        padding: 3\n    }} />;\n};\n\nexport default CloseIcon;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const t = useTranslation();\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : t(\"change\");\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React, { FC, useCallback } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\nimport LPToken from \"../types/LPToken\";\nimport { formatBalance } from \"../utils\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenLogo from \"./TokenLogo\";\n\nexport type LPTokenSelectFilter = \"balance\" | \"amountDeposited\" | \"\";\n\nexport interface LPTokenSelectProps {\n    state: LPTokensState;\n    title: string;\n    emptyText: string;\n    Item: FC<LPTokenItemProps>;\n    style?: ViewStyle;\n}\n\nexport interface LPTokenItemProps {\n    token: LPToken;\n    selected: boolean;\n    onSelectToken: (token: LPToken) => void;\n}\n\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\n    const onUnselectToken = () => props.state.setSelectedLPToken();\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.state.selectedLPToken}\n                onExpand={() => props.state.setSelectedLPToken()}>\n                <LPTokenList state={props.state} emptyText={props.emptyText} Item={props.Item} />\n            </Expandable>\n            {props.state.selectedLPToken && (\n                <props.Item token={props.state.selectedLPToken} selected={true} onSelectToken={onUnselectToken} />\n            )}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LPTokenList = ({\n    state,\n    emptyText,\n    Item\n}: {\n    state: LPTokensState;\n    emptyText: string;\n    Item: FC<LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return <Item key={item.symbol} token={item} selected={false} onSelectToken={state.setSelectedLPToken} />;\n        },\n        [state.setSelectedLPToken]\n    );\n    const data = state.lpTokens.sort((p1, p2) => {\n        const m1 = p1.multiplier || 0;\n        const m2 = p2.multiplier || 0;\n        return m1 === m2 ? (p2.apy || 0) - (p1.apy || 0) : m2 - m1;\n    });\n    return state.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList text={emptyText} />\n    ) : (\n        <FlatList keyExtractor={item => item.symbol} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = ({ text }: { text: string }) => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {text}\n            </Text>\n        </View>\n    );\n};\n\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\n    const { textMedium } = useColors();\n    const balance = formatBalance(props.token.balance, props.token.decimals, 6);\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                    {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n                </Text>\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\n                        {balance}\n                    </Text>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default LPTokenSelect;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default SelectIcon;\n","import { useContext, useEffect, useState } from \"react\";\n\nimport { Pair } from \"@luaswap/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport { fetchMyLPTokens, fetchMyPools, fetchMyUniswapLPTokens, fetchPools } from \"../utils/fetch-utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface LPTokensState extends TokenPairState {\n    updateLPTokens: () => Promise<void>;\n    lastTimeRefreshed: number;\n    updateLastTimeRefreshed: () => void;\n    lpTokens: LPToken[];\n    selectedLPToken?: LPToken;\n    setSelectedLPToken: (token?: LPToken) => void;\n    selectedLPTokenAllowed: boolean;\n    setSelectedLPTokenAllowed: (allowed: boolean) => void;\n    pair?: Pair;\n    amount: string;\n    setAmount: (amount: string) => void;\n}\n\ntype Mode = \"pools\" | \"my-pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\n\nlet updatingLPTokens = false;\n\n// tslint:disable-next-line:max-func-body-length\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\n    const state = useTokenPairState();\n    const { provider, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\n    const [selectedLPTokenAllowed, setSelectedLPTokenAllowed] = useState(false);\n    const [pair, setPair] = useState<Pair>();\n    const [amount, setAmount] = useState(\"\");\n    const { getPair } = useSDK();\n\n    const updateLPTokens = async () => {\n        if (address && provider && tokens.length > 0 && !updatingLPTokens) {\n            try {\n                updatingLPTokens = true;\n                const data = await (mode === \"my-pools\"\n                    ? fetchMyPools(address, tokens, provider)\n                    : mode === \"pools\"\n                    ? fetchPools(address, tokens, provider)\n                    : mode === \"my-lp-tokens\"\n                    ? fetchMyLPTokens(address, tokens, provider)\n                    : fetchMyUniswapLPTokens(address, tokens, provider));\n                if (data) {\n                    setLPTokens(data);\n                }\n            } finally {\n                updatingLPTokens = false;\n                setLoading(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (!selectedLPToken) {\n            setAmount(\"\");\n        }\n    }, [selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        setLoading(true);\n        setPair(undefined);\n        if (selectedLPToken && provider) {\n            try {\n                setPair(await getPair(selectedLPToken.tokenA, selectedLPToken.tokenB, provider));\n            } catch (e) {\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    }, [selectedLPToken, provider]);\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\n                if (!block) {\n                    setLoading(true);\n                }\n                await updateLPTokens();\n            }\n        },\n        () => \"updateLPTokens()\",\n        [tokens.length, address, lastTimeRefreshed],\n        0\n    );\n\n    return {\n        ...state,\n        fromToken: state.fromToken || selectedLPToken?.tokenA,\n        toToken: state.toToken || selectedLPToken?.tokenB,\n        updateLPTokens,\n        loading: state.loading || loading,\n        lastTimeRefreshed,\n        updateLastTimeRefreshed: () => {\n            setLastTimeRefreshed(Date.now());\n        },\n        lpTokens,\n        selectedLPToken,\n        setSelectedLPToken,\n        selectedLPTokenAllowed,\n        setSelectedLPTokenAllowed,\n        pair,\n        amount,\n        setAmount\n    };\n};\n\nexport default useLPTokensState;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback } from \"react\";\nimport { WETH } from \"@luaswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nconst useWeth = (chainId = 88) => {\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const weth = getContract(\"IWETH\", WETH[chainId].address, signer);\n            const gasLimit = await weth.estimateGas.deposit({\n                value: amount\n            });\n            const tx = await weth.deposit({\n                value: amount,\n                gasLimit\n            });\n            return await logTransaction(tx, \"WETH.deposit()\");        \n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[chainId].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");        \n        \n    }, []);\n\n    return {\n        wrapETH,\n        unwrapETH\n    };\n};\n\nexport default useWeth;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { isNativeToken, parseBalance } from \"../utils\";\nimport useWeth from \"./useWeth\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { signer, address, tokens, updateTokens, getTokenAllowance, chainId } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useWeth(chainId);\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (!isNativeToken(fromToken)) {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (!isNativeToken(toToken)) {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n"],"sourceRoot":""}