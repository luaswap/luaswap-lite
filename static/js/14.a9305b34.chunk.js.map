{"version":3,"sources":["index.tsx","node_modules/react-sticky-box/dist/es/index.js","node_modules/@babel/runtime/helpers/inheritsLoose.js","node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["isServer","process","hoverListener","hasMouse","window","refs","mousePosition","x","y","hover","target","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","children","hovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","e","scrollEventThrottle","forwardedRef","Pressable","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","style","interactionState","ScrollView","FlatList","VirtualizedList","stickyProp","CSS","supports","passiveArg","opts","Object","defineProperty","get","passive","addEventListener","removeEventListener","StickyBox","_React$Component","props","_this","call","this","addListener","element","handler","unsubscribes","push","addResizeObserver","node","ro","observe","disconnect","registerContainerRef","n","scrollPane","parentElement","overflowYVal","getComputedStyle","getPropertyValue","body","getScrollParent","latestScrollY","scrollY","scrollTop","handleScroll","handleWindowResize","handleScrollPaneResize","parentNode","handleParentNodeResize","handleNodeResize","initial","forEach","fn","getCurrentOffset","mode","offset","_this$props","offsetTop","offsetBottom","Math","max","scrollPaneOffset","naturalTop","viewPortHeight","nodeHeight","innerHeight","offsetHeight","firstChild","offsetParent","getBoundingClientRect","top","computedParentStyle","parentPaddingTop","parseInt","parentPaddingBottom","current","offsetTill","oldParentHeight","parentHeight","height","bottom","changeMode","changeToStickyBottomIfBoxTooLow","Number","POSITIVE_INFINITY","_temp","prevHeight","_this$props2","undefined","diff","lowestPossible","nextOffset","min","_this$props3","scrollDelta","_proto","prototype","newMode","_this$props4","onChangeMode","position","nextBottom","render","_this$props5","className","createElement","Component","defaultProps","setPrototypeOf","module","exports","subClass","superClass","create","constructor","__esModule","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","length","enumerable","configurable","set","value","delete","entries","splice","has","clear","callback","ctx","_i","_a","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","_b","propertyName","getInstance","instance_","defineConfigurable","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","getHTMLElementContentRect","clientWidth","clientHeight","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","width","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","map","WeakMap","ResizeObserver","method","apply"],"mappings":"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","file":"static/js/14.a9305b34.chunk.js","sourcesContent":["import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nvar getScrollParent = function (node) {\n  var parent = node;\n\n  while (parent = parent.parentElement) {\n    var overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body) return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\") return parent;\n  }\n\n  return window;\n};\n\nvar offsetTill = function (node, target) {\n  var current = node;\n  var offset = 0; // If target is not an offsetParent itself, subtract its offsetTop and set correct target\n\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n\n  return offset;\n};\n\nvar stickyProp = null;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\")) stickyProp = \"sticky\";else if (CSS.supports(\"position\", \"-webkit-sticky\")) stickyProp = \"-webkit-sticky\";\n} // Inspired by https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n\n\nvar passiveArg = false;\n\ntry {\n  var opts = Object.defineProperty({}, \"passive\", {\n    // eslint-disable-next-line getter-return\n    get: function get() {\n      passiveArg = {\n        passive: true\n      };\n    }\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nvar StickyBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(StickyBox, _React$Component);\n\n  function StickyBox(props) {\n    var _this = _React$Component.call(this, props) || this;\n\n    _this.addListener = function (element, event, handler, passive) {\n      element.addEventListener(event, handler, passive);\n\n      _this.unsubscribes.push(function () {\n        return element.removeEventListener(event, handler);\n      });\n    };\n\n    _this.addResizeObserver = function (node, handler) {\n      var ro = new ResizeObserver(handler);\n      ro.observe(node);\n\n      _this.unsubscribes.push(function () {\n        return ro.disconnect();\n      });\n    };\n\n    _this.registerContainerRef = function (n) {\n      if (!stickyProp) return;\n      _this.node = n;\n\n      if (n) {\n        _this.scrollPane = getScrollParent(_this.node);\n        _this.latestScrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n\n        _this.addListener(_this.scrollPane, \"scroll\", _this.handleScroll, passiveArg);\n\n        _this.addListener(_this.scrollPane, \"mousewheel\", _this.handleScroll, passiveArg);\n\n        if (_this.scrollPane === window) {\n          _this.addListener(window, \"resize\", _this.handleWindowResize);\n\n          _this.handleWindowResize();\n        } else {\n          _this.addResizeObserver(_this.scrollPane, _this.handleScrollPaneResize);\n\n          _this.handleScrollPaneResize();\n        }\n\n        _this.addResizeObserver(_this.node.parentNode, _this.handleParentNodeResize);\n\n        _this.handleParentNodeResize();\n\n        _this.addResizeObserver(_this.node, _this.handleNodeResize);\n\n        _this.handleNodeResize({\n          initial: true\n        });\n\n        _this.initial();\n      } else {\n        _this.unsubscribes.forEach(function (fn) {\n          return fn();\n        });\n\n        _this.unsubscribes = [];\n        _this.scrollPane = null;\n      }\n    };\n\n    _this.getCurrentOffset = function () {\n      if (_this.mode === \"relative\") return _this.offset;\n      var _this$props = _this.props,\n          offsetTop = _this$props.offsetTop,\n          offsetBottom = _this$props.offsetBottom;\n\n      if (_this.mode === \"stickyTop\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY - _this.naturalTop + offsetTop);\n      }\n\n      if (_this.mode === \"stickyBottom\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY + _this.viewPortHeight - (_this.naturalTop + _this.nodeHeight + offsetBottom));\n      }\n    };\n\n    _this.handleWindowResize = function () {\n      _this.viewPortHeight = window.innerHeight;\n      _this.scrollPaneOffset = 0;\n\n      _this.handleScroll();\n    };\n\n    _this.handleScrollPaneResize = function () {\n      _this.viewPortHeight = _this.scrollPane.offsetHeight;\n\n      if (process.env.NODE_ENV !== \"production\" && _this.viewPortHeight === 0) {\n        console.warn(\"react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:\", _this.scrollPane);\n      } // Only applicable if scrollPane is an offsetParent\n\n\n      if (_this.scrollPane.firstChild.offsetParent === _this.scrollPane) {\n        _this.scrollPaneOffset = _this.scrollPane.getBoundingClientRect().top;\n      } else {\n        _this.scrollPaneOffset = 0;\n      }\n\n      _this.handleScroll();\n    };\n\n    _this.handleParentNodeResize = function () {\n      var parentNode = _this.node.parentNode;\n      var computedParentStyle = getComputedStyle(parentNode, null);\n      var parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n      var parentPaddingBottom = parseInt(computedParentStyle.getPropertyValue(\"padding-bottom\"), 10);\n      _this.naturalTop = offsetTill(parentNode, _this.scrollPane) + parentPaddingTop + _this.scrollPaneOffset;\n      var oldParentHeight = _this.parentHeight;\n      _this.parentHeight = parentNode.getBoundingClientRect().height - (parentPaddingTop + parentPaddingBottom);\n\n      if (_this.mode === \"relative\") {\n        if (_this.props.bottom) {\n          _this.changeMode(\"relative\");\n        } else {\n          // If parent height decreased...\n          if (oldParentHeight > _this.parentHeight) {\n            _this.changeToStickyBottomIfBoxTooLow(_this.latestScrollY);\n          }\n        }\n      }\n\n      if (oldParentHeight !== _this.parentHeight && _this.mode === \"relative\") {\n        _this.latestScrollY = Number.POSITIVE_INFINITY;\n\n        _this.handleScroll();\n      }\n    };\n\n    _this.handleNodeResize = function (_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          initial = _ref.initial;\n\n      var prevHeight = _this.nodeHeight;\n      _this.nodeHeight = _this.node.getBoundingClientRect().height;\n\n      if (!initial && prevHeight !== _this.nodeHeight) {\n        var _this$props2 = _this.props,\n            offsetTop = _this$props2.offsetTop,\n            offsetBottom = _this$props2.offsetBottom,\n            bottom = _this$props2.bottom;\n\n        if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n          // Just make it sticky if node smaller than viewport\n          _this.mode = undefined;\n\n          _this.initial();\n        } else {\n          var diff = prevHeight - _this.nodeHeight;\n          var lowestPossible = _this.parentHeight - _this.nodeHeight;\n          var nextOffset = Math.min(lowestPossible, _this.getCurrentOffset() + (bottom ? diff : 0));\n          _this.offset = Math.max(0, nextOffset);\n          if (!bottom || _this.mode !== \"stickyBottom\") _this.changeMode(\"relative\");\n        }\n      }\n    };\n\n    _this.handleScroll = function () {\n      var _this$props3 = _this.props,\n          offsetTop = _this$props3.offsetTop,\n          offsetBottom = _this$props3.offsetBottom;\n      var scrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n      if (scrollY === _this.latestScrollY) return;\n\n      if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n        // Just make it sticky if node smaller than viewport\n        _this.initial();\n\n        _this.latestScrollY = scrollY;\n        return;\n      }\n\n      var scrollDelta = scrollY - _this.latestScrollY;\n      _this.offset = _this.getCurrentOffset();\n\n      if (scrollDelta > 0) {\n        // scroll down\n        if (_this.mode === \"stickyTop\") {\n          if (scrollY + _this.scrollPaneOffset + offsetTop > _this.naturalTop) {\n            if (scrollY + _this.scrollPaneOffset + _this.viewPortHeight <= _this.naturalTop + _this.nodeHeight + _this.offset + offsetBottom) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyBottom\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          _this.changeToStickyBottomIfBoxTooLow(scrollY);\n        }\n      } else {\n        // scroll up\n        if (_this.mode === \"stickyBottom\") {\n          if (_this.scrollPaneOffset + scrollY + _this.viewPortHeight < _this.naturalTop + _this.parentHeight + offsetBottom) {\n            if (_this.scrollPaneOffset + scrollY + offsetTop >= _this.naturalTop + _this.offset) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyTop\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          if (_this.scrollPaneOffset + scrollY + offsetTop < _this.naturalTop + _this.offset) {\n            _this.changeMode(\"stickyTop\");\n          }\n        }\n      }\n\n      _this.latestScrollY = scrollY;\n    };\n\n    if (props.offset && process.env.NODE_ENV !== \"production\") {\n      console.warn(\"react-sticky-box's \\\"offset\\\" prop is deprecated. Please use \\\"offsetTop\\\" instead. It'll be removed in v0.8.\");\n    }\n\n    _this.unsubscribes = [];\n    return _this;\n  }\n\n  var _proto = StickyBox.prototype;\n\n  _proto.changeMode = function changeMode(newMode) {\n    var _this$props4 = this.props,\n        onChangeMode = _this$props4.onChangeMode,\n        offsetTop = _this$props4.offsetTop,\n        offsetBottom = _this$props4.offsetBottom,\n        bottom = _this$props4.bottom;\n    if (this.mode !== newMode) onChangeMode(this.mode, newMode);\n    this.mode = newMode;\n\n    if (newMode === \"relative\") {\n      this.node.style.position = \"relative\";\n\n      if (bottom) {\n        var nextBottom = Math.max(0, this.parentHeight - this.nodeHeight - this.offset);\n        this.node.style.bottom = nextBottom + \"px\";\n      } else {\n        this.node.style.top = this.offset + \"px\";\n      }\n    } else {\n      this.node.style.position = stickyProp;\n\n      if (newMode === \"stickyBottom\") {\n        if (bottom) {\n          this.node.style.bottom = offsetBottom + \"px\";\n        } else {\n          this.node.style.top = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        }\n      } else {\n        // stickyTop\n        if (bottom) {\n          this.node.style.bottom = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        } else {\n          this.node.style.top = offsetTop + \"px\";\n        }\n      }\n    }\n\n    this.offset = this.getCurrentOffset();\n  };\n\n  _proto.initial = function initial() {\n    var bottom = this.props.bottom;\n\n    if (bottom) {\n      if (this.mode !== \"stickyBottom\") this.changeMode(\"stickyBottom\");\n    } else {\n      if (this.mode !== \"stickyTop\") this.changeMode(\"stickyTop\");\n    }\n  };\n\n  _proto.changeToStickyBottomIfBoxTooLow = function changeToStickyBottomIfBoxTooLow(scrollY) {\n    var offsetBottom = this.props.offsetBottom;\n\n    if (scrollY + this.scrollPaneOffset + this.viewPortHeight >= this.naturalTop + this.nodeHeight + this.offset + offsetBottom) {\n      this.changeMode(\"stickyBottom\");\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        children = _this$props5.children,\n        className = _this$props5.className,\n        style = _this$props5.style;\n    return React.createElement(\"div\", {\n      className: className,\n      style: style,\n      ref: this.registerContainerRef\n    }, children);\n  };\n\n  return StickyBox;\n}(React.Component);\n\nexport { StickyBox as default };\nStickyBox.defaultProps = {\n  onChangeMode: function onChangeMode() {},\n  offsetTop: 0,\n  offsetBottom: 0\n};\nprocess.env.NODE_ENV !== \"production\" ? StickyBox.propTypes = {\n  onChangeMode: PropTypes.func,\n  offsetTop: PropTypes.number,\n  offsetBottom: PropTypes.number,\n  bottom: PropTypes.bool\n} : void 0;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"sourceRoot":""}