{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","node_modules/eth-permit/dist/eth-permit.js","node_modules/eth-permit/dist/lib.js","node_modules/utf8/utf8.js","src/components/TokenSymbol.tsx","src/hooks/useZapper.tsx","src/hooks/useRemoveLiquidityState.tsx","src/screens/RemoveLiquidityScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","borderRadius","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","signERC2612Permit","signDaiPermit","rpc_1","lib_1","MAX_INT","EIP712Domain","name","type","zeros","numZeros","padEnd","getTokenName","provider","hexToUtf8","call","substr","getDomain","tokenAddress","chainId","all","getChainId","version","verifyingContract","holder","expiry","nonce","message","allowed","typedData","domain","types","Permit","primaryType","createTypedDaiData","sig","signData","assign","owner","deadline","createTypedERC2612Data","__importDefault","mod","__esModule","utf8_1","hex","str","code","l","replace","split","reverse","join","length","i","parseInt","String","fromCharCode","default","decode","root","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","charCodeAt","push","checkScalarValue","codePoint","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","encode","codePoints","index","byteString","tmp","array","ucs2encode","TokenSymbol","medium","caption","marginLeft","fontWeight","useZapper","ethereum","useSDK","getPair","getTrade","calculateAmountOfLPTokenMinted","useSwapRouter","allowedSlippage","ttl","zapSlippage","Percent","populateSwapData","fromToken","toToken","signer","trade","params","Router","swapCallParameters","feeOnTransfer","recipient","ZAP_IN","router","getContract","ROUTER","populateTransaction","methodName","args","data","zapIn","fromAmount","pair","TokenAmount","convertToken","div","getOutputAmount","lpTokenAmount","contract","liquidityToken","deduct","isNativeToken","ethers","constants","Zero","estimateGas","ZapIn","gasLimit","mul","logTransaction","map","arg","getZapOutSwappedAmount","outputToken","lpToken","tokenA","tokenB","fromReserve","parseCurrencyAmount","reserveOf","decimals","totalSupply","outputAmount","zapOut","ZAP_OUT","Math","floor","Date","getTime","getAddress","permit","v","r","s","ZapOutWithPermit","useRemoveLiquidityState","state","useLPTokensState","getTokenAllowance","updateTokens","removeLiquidity","removeLiquidityETH","setOutputToken","removing","setRemoving","useAsyncEffect","selectedLPToken","setFromSymbol","setToSymbol","setSelectedLPTokenAllowed","minAllowance","BigNumber","from","pow","sub","allowance","gte","toReserve","setFromAmount","formatBalance","parseBalance","setToAmount","removeFromRouter","toAmount","liquidity","isWrappedNativeToken","amountToRemove","amountToRemoveETH","onRemove","updateLPTokens","setSelectedLPToken","undefined","RemoveLiquidity","ChangeNetwork","View","marginTop","large","LPTokenSelect","emptyText","Item","LPTokenItem","Border","LPTokenOutputItem","Selectable","selected","onSelectToken","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","small","replaceWETH","Text","flex","CloseIcon","SelectIcon","AmountInput","TokenInput","onAmountChanged","setAmount","Heading","text","AmountInfo","useMemo","add","FEE","InfoBox","Meta","label","Controls","error","setError","fromSymbol","toSymbol","approveRequired","selectedLPTokenAllowed","isEmptyValue","gt","balance","FetchingButton","ErrorMessage","RemoveButton","catch","Button","RemoveLiquidityScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"wFAAA,2DA4BeA,UAfyB,SAAAC,GACpC,IAAMC,EAAIC,oBACV,EAA6CC,oBAArCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,YAC7B,OACI,kBAAC,UAAD,CACIC,MAAO,CACHC,SAAUC,aAAa,GAAK,GAC5BC,aAAcC,UAAQC,OACtBC,MAAOb,EAAMc,SAAWR,EAAcN,EAAMe,OAASX,EAAWC,IAEnEL,EAAMc,SAAWb,EAAE,OAASD,EAAMe,OAASf,EAAMe,OAAS,KAAOf,EAAMgB,QAAU,IAAMf,EAAE,e,kCCvBtG,4CASegB,UAJmB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAC3BjB,EAAIC,oBACV,OAAO,kBAAC,UAAD,CAAQiB,MAAOD,EAASjB,EAAE,gBAAiB,CAAEiB,WAAYjB,EAAE,wBAAyBa,UAAU,EAAMP,MAAO,CAAEa,aAAc,Q,sIC2CvHC,UAjC+B,SAAArB,GAAU,IAAD,EAC7CC,EAAIC,oBACFoB,EAAiBC,qBAAWC,iBAA5BF,aACR,EAA8BG,oBAAS,GAAvC,WAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,uBAAY,0BAAAC,EAAAC,OAAA,oDACpB/B,EAAMgC,MADc,wBAEpBhC,EAAMiC,QAAQ,IACdN,GAAW,GAHS,oBAAAG,EAAA,MAKCR,EAAatB,EAAMgC,MAAME,QAASlC,EAAMmC,UALzC,YAKVC,EALU,4CAAAN,EAAA,MAONM,EAAGC,QAPG,QAQZrC,EAAMsC,YARM,0DAWhBtC,EAAMiC,QAAN,MAXgB,yBAahBN,GAAW,GAbK,sFAgBzB,CAAC3B,EAAMgC,QACV,OAAIhC,EAAMuC,OAAe,kBAAC,UAAD,MAErB,kBAAC,UAAD,CACIpB,MAAOlB,EAAE,WAAY,CAAEiB,QAAQ,SAAAlB,EAAMgC,YAAN,IAAad,SAAU,KACtDU,QAASA,EACTF,QAASA,EACTc,eAAgB,CAAE9B,aAAcC,UAAQ8B,MACxClC,MAAO,CAAEa,aAAc,Q,kCC5CnC,IAAIsB,EAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YAGtEO,OAAOC,eAAeC,EAAS,aAAc,CAAEX,OAAO,IACtDW,EAAQC,kBAAoBD,EAAQE,mBAAgB,EACpD,MAAMC,EAAQ,EAAQ,KAChBC,EAAQ,EAAQ,MAChBC,EAAU,qEACVC,EAAe,CACjB,CAAEC,KAAM,OAAQC,KAAM,UACtB,CAAED,KAAM,UAAWC,KAAM,UACzB,CAAED,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,oBAAqBC,KAAM,YAwCjCC,EAASC,GAAa,GAAGC,OAAOD,EAAU,KAC1CE,EAAe,CAACC,EAAU1C,IAAYQ,OAAU,OAAQ,OAAQ,GAAQ,YAAe,OAAOyB,EAAMU,iBAAiBX,EAAMY,KAAKF,EAAU1C,EAFhI,eAEmJ6C,OAAO,SACpKC,EAAY,CAACJ,EAAU5C,IAAUU,OAAU,OAAQ,OAAQ,GAAQ,YACrE,GAAqB,kBAAVV,EACP,OAAOA,EAEX,MAAMiD,EAAejD,GACdsC,EAAMY,SAAiBlC,QAAQmC,IAAI,CACtCR,EAAaC,EAAUK,GACvBf,EAAMkB,WAAWR,KAGrB,MADe,CAAEN,OAAMe,QAAS,IAAKH,UAASI,kBAAmBL,MAGrElB,EAAQE,cAAgB,CAACW,EAAU5C,EAAOuD,EAAQpD,EAASqD,EAAQC,IAAU/C,OAAU,OAAQ,OAAQ,GAAQ,YAC3G,MAAMuC,EAAejD,EAAMsD,mBAAqBtD,EAC1C0D,EAAU,CACZH,SACApD,UACAsD,MAAOA,UAAgBvB,EAAMY,KAAKF,EAAUK,EAAc,aAAeT,EAAM,MAAMe,EAAOR,OAAO,OACnGS,OAAQA,GAAUpB,EAClBuB,SAAS,GAGPC,EA9DiB,EAACF,EAASG,KACf,CACdC,MAAO,CACHzB,eACA0B,OAAQ,CACJ,CAAEzB,KAAM,SAAUC,KAAM,WACxB,CAAED,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,SAAUC,KAAM,WACxB,CAAED,KAAM,UAAWC,KAAM,UAGjCyB,YAAa,SACbH,SACAH,YAgDcO,CAAmBP,QADhBV,EAAUJ,EAAU5C,IAEnCkE,QAAYhC,EAAMiC,SAASvB,EAAUW,EAAQK,GACnD,OAAO/B,OAAOuC,OAAOvC,OAAOuC,OAAO,GAAIF,GAAMR,MAEjD3B,EAAQC,kBAAoB,CAACY,EAAU5C,EAAOqE,EAAOlE,EAASiB,EAAQgB,EAASkC,EAAUb,IAAU/C,OAAU,OAAQ,OAAQ,GAAQ,YACjI,MAAMuC,EAAejD,EAAMsD,mBAAqBtD,EAC1C0D,EAAU,CACZW,QACAlE,UACAiB,QACAqC,MAAOA,UAAgBvB,EAAMY,KAAKF,EAAUK,EAAc,aAAeT,EAAM,MAAM6B,EAAMtB,OAAO,OAClGuB,SAAUA,GAAYlC,GAGpBwB,EA1DqB,EAACF,EAASG,KACnB,CACdC,MAAO,CACHzB,eACA0B,OAAQ,CACJ,CAAEzB,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,WAAYC,KAAM,aAGlCyB,YAAa,SACbH,SACAH,YA4Cca,CAAuBb,QADpBV,EAAUJ,EAAU5C,IAEnCkE,QAAYhC,EAAMiC,SAASvB,EAAUyB,EAAOT,GAClD,OAAO/B,OAAOuC,OAAOvC,OAAOuC,OAAO,GAAIF,GAAMR,O,kCClGjD,IAAIc,EAAmB7D,MAAQA,KAAK6D,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExD5C,OAAOC,eAAeC,EAAS,aAAc,CAAEX,OAAO,IACtDW,EAAQc,eAAY,EACpB,MAAM8B,EAASH,EAAgB,EAAQ,OACvCzC,EAAQc,UAAY,SAAU+B,GAG1B,IAAIC,EAAM,GACNC,EAAO,EAOPC,GADJH,GADAA,GADAA,GADAA,GAFAA,EAAMA,EAAII,QAAQ,OAAQ,KAEhBA,QAAQ,WAAY,KACpBC,MAAM,IAAIC,UAAUC,KAAK,KACzBH,QAAQ,WAAY,KACpBC,MAAM,IAAIC,UAAUC,KAAK,KACvBC,OACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAGM,GAAK,EACxBP,EAAOQ,SAASV,EAAI7B,OAAOsC,EAAG,GAAI,IAElCR,GAAOU,OAAOC,aAAaV,GAG/B,OAAOH,EAAOc,QAAQC,OAAOb,K,sBCxB/B,SAASc,GAEV,IAiLIC,EACAC,EACAC,EAnLAC,EAAqBR,OAAOC,aAGhC,SAASQ,EAAWC,GAMnB,IALA,IAGI7E,EACA8E,EAJAC,EAAS,GACTC,EAAU,EACVhB,EAASa,EAAOb,OAGbgB,EAAUhB,IAChBhE,EAAQ6E,EAAOI,WAAWD,OACb,OAAUhF,GAAS,OAAUgF,EAAUhB,EAG3B,QAAX,OADbc,EAAQD,EAAOI,WAAWD,OAEzBD,EAAOG,OAAe,KAARlF,IAAkB,KAAe,KAAR8E,GAAiB,QAIxDC,EAAOG,KAAKlF,GACZgF,KAGDD,EAAOG,KAAKlF,GAGd,OAAO+E,EAqBR,SAASI,EAAiBC,GACzB,GAAIA,GAAa,OAAUA,GAAa,MACvC,MAAMC,MACL,oBAAsBD,EAAUE,SAAS,IAAIC,cAC7C,0BAMH,SAASC,EAAWJ,EAAWK,GAC9B,OAAOd,EAAqBS,GAAaK,EAAS,GAAQ,KAG3D,SAASC,EAAgBN,GACxB,GAAgC,IAAf,WAAZA,GACJ,OAAOT,EAAmBS,GAE3B,IAAItH,EAAS,GAeb,OAdgC,IAAf,WAAZsH,GACJtH,EAAS6G,EAAqBS,GAAa,EAAK,GAAQ,KAEpB,IAAf,WAAZA,IACTD,EAAiBC,GACjBtH,EAAS6G,EAAqBS,GAAa,GAAM,GAAQ,KACzDtH,GAAU0H,EAAWJ,EAAW,IAEI,IAAf,WAAZA,KACTtH,EAAS6G,EAAqBS,GAAa,GAAM,EAAQ,KACzDtH,GAAU0H,EAAWJ,EAAW,IAChCtH,GAAU0H,EAAWJ,EAAW,IAEjCtH,GAAU6G,EAAgC,GAAZS,EAAoB,KAmBnD,SAASO,IACR,GAAIjB,GAAaD,EAChB,MAAMY,MAAM,sBAGb,IAAIO,EAA0C,IAAvBpB,EAAUE,GAGjC,GAFAA,IAEiC,MAAT,IAAnBkB,GACJ,OAA0B,GAAnBA,EAIR,MAAMP,MAAM,6BAGb,SAASQ,IACR,IAAIC,EAIAV,EAEJ,GAAIV,EAAYD,EACf,MAAMY,MAAM,sBAGb,GAAIX,GAAaD,EAChB,OAAO,EAQR,GAJAqB,EAA+B,IAAvBtB,EAAUE,GAClBA,IAGsB,IAAT,IAARoB,GACJ,OAAOA,EAIR,GAAsB,MAAT,IAARA,GAAuB,CAG3B,IADAV,GAAsB,GAARU,IAAiB,EADvBH,MAES,IAChB,OAAOP,EAEP,MAAMC,MAAM,6BAKd,GAAsB,MAAT,IAARS,GAAuB,CAI3B,IADAV,GAAsB,GAARU,IAAiB,GAFvBH,KAEuC,EADvCA,MAES,KAEhB,OADAR,EAAiBC,GACVA,EAEP,MAAMC,MAAM,6BAKd,GAAsB,MAAT,IAARS,KAIJV,GAAsB,EAARU,IAAiB,GAHvBH,KAGyC,GAFzCA,KAGG,EAFHA,MAGS,OAAYP,GAAa,QACzC,OAAOA,EAIT,MAAMC,MAAM,0BAoBbd,EAAKtC,QAAU,QACfsC,EAAKwB,OAhHL,SAAoBlB,GAMnB,IALA,IAAImB,EAAapB,EAAWC,GACxBb,EAASgC,EAAWhC,OACpBiC,GAAS,EAETC,EAAa,KACRD,EAAQjC,GAEhBkC,GAAcR,EADFM,EAAWC,IAGxB,OAAOC,GAuGR3B,EAAKD,OAhBL,SAAoB4B,GACnB1B,EAAYI,EAAWsB,GACvBzB,EAAYD,EAAUR,OACtBU,EAAY,EAGZ,IAFA,IACIyB,EADAH,EAAa,IAEiB,KAA1BG,EAAMN,MACbG,EAAWd,KAAKiB,GAEjB,OA/JD,SAAoBC,GAKnB,IAJA,IAEIpG,EAFAgE,EAASoC,EAAMpC,OACfiC,GAAS,EAETlB,EAAS,KACJkB,EAAQjC,IAChBhE,EAAQoG,EAAMH,IACF,QAEXlB,GAAUJ,GADV3E,GAAS,SAC8B,GAAK,KAAQ,OACpDA,EAAQ,MAAiB,KAARA,GAElB+E,GAAUJ,EAAmB3E,GAE9B,OAAO+E,EAiJAsB,CAAWL,IA/LnB,CAwMmDrF,I,kCCzMpD,2CAgBe2F,UAVK,SAAC1J,GAAD,OAChB,kBAAC,UAAD,CACI2J,QAAQ,EACRC,SAAS,EACT9I,SAAUd,EAAMc,SAChBP,MAAO,CAAEsJ,WAAYlJ,UAAQ8B,KAAMqH,WAAY,SAC9C9J,EAAMgC,MAAMd,U,kKCqIN6I,UAlIG,WACd,IAAQC,EAAazI,qBAAWC,iBAAxBwI,SACR,EAA8DC,oBAAtDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,+BAC3B,EAAiCC,oBAAzBC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,IACnBC,EAAc,IAAIC,UAAQ,IAAK,OAE/BC,EAAmB,SACrBC,EACAC,EACA7J,EACA6D,EACAiG,GALqB,uBAAA/I,EAAAC,OAAA,kEAAAD,EAAA,MAODqI,EAASQ,EAAWC,EAAS7J,EAAQ6D,IAPpC,UAOfkG,EAPe,6BAQH,IAAIrC,MAAM,qBARP,cASfsC,EAASC,SAAOC,mBAAmBH,EAAO,CAC5CI,eAAe,EACfZ,kBACAa,UAAWC,SACXb,QAEEc,EAASC,sBAAY,qBAAsBC,SAAQV,GAfpC,WAAA/I,EAAA,OAgBJ,EAAAuJ,EAAOG,qBAAoBT,EAAOU,YAAlC,YAAiDV,EAAOW,MAAxD,QAA8D,CAAEtI,MAAO2H,EAAO3H,WAhB1E,cAgBfhB,EAhBe,yBAiBdA,EAAGuJ,MAAQ,IAjBG,8DAoBnBC,EAAQ/J,uBACV,SACI8I,EACAC,EACAiB,EACAjH,EACAiG,GALJ,+BAAA/I,EAAAC,OAAA,kEAAAD,EAAA,MAOuBoI,EAAQS,EAAWC,EAAShG,IAPnD,cAOUkH,EAPV,OAQU/K,EAAS,IAAIgL,cAAYC,uBAAarB,GAAYkB,EAAWI,IAAI,GAAGvD,YAR9E,WAAA5G,EAAA,MASgCsI,EAA+B0B,EAAM/K,EAAQ+K,EAAKI,gBAAgBnL,GAAQ,KAT1G,UASUoL,EATV,6BAU8B,IAAI1D,MAAM,oCAVxC,cAWU2D,EAAWd,sBAAY,QAASF,SAAQP,GAXlD,KAaQF,EAAUzI,QAblB,KAcQ4J,EAAKO,eAAenK,QAd5B,KAeQ2J,EAfR,KAgBQS,iBAAOH,EAAe3B,GAhB9B,KAiBQe,SAjBR,KAkBQA,SAlBR,YAAAzJ,EAAA,MAmBc4I,EAAiBC,EAAWC,EAASiB,EAAWI,IAAI,GAAIrH,EAAUiG,IAnBhF,2BAYUa,EAZV,qCAqBUtI,EAAQmJ,wBAAc5B,GAAakB,EAAaW,SAAOC,UAAUC,KArB3E,YAAA5K,EAAA,OAsB2B,EAAAsK,EAASO,aAAYC,MAArB,QAA8BlB,EAA9B,QAAoC,CAAEtI,aAtBjE,eAsBUyJ,EAtBV,mBAAA/K,EAAA,MAuBqBsK,EAASQ,MAAT,MAAAR,EAAkBV,EAAT,OAAD,CAAgB,CACrCtI,QACAyJ,SAAUA,EAASC,IAAI,KAAKb,IAAI,UAzBxC,eAuBU7J,EAvBV,yBA2BW2K,iBAAc,WAAd,GAAe3K,EAAI,4BAAnB,WAAkDsJ,EAAKsB,KAAI,SAAAC,GAAG,OAAIA,EAAIvE,kBA3BjF,+DA6BA,CAACgC,IAGCwC,EAAyB,SAC3BC,EACAC,EACAjB,EACAvH,GAJ2B,yBAAA9C,EAAAC,OAAA,mDAQvBoL,IAAgBC,EAAQC,OARD,gBASvB1C,EAAYyC,EAAQE,OACpB1C,EAAUwC,EAAQC,OAVK,0BAWhBF,IAAgBC,EAAQE,OAXR,iBAYvB3C,EAAYyC,EAAQC,OACpBzC,EAAUwC,EAAQE,OAbK,8BAejB,IAAI7E,MAAM,qBAfO,2BAAA3G,EAAA,MAiBRoI,EAAQS,EAAWC,EAAShG,IAjBpB,eAiBrBkH,EAjBqB,OAkBrByB,EAAcC,8BAAoB1B,EAAK2B,UAAUzB,uBAAarB,IAAaA,EAAU+C,UACrF7B,EAAaM,EAAcW,IAAIS,GAAatB,IAAImB,EAAQO,aAnBnC,YAAA7L,EAAA,MAoBPqI,EAASQ,EAAWC,EAASiB,EAAYjH,IApBlC,WAoBrBkG,EApBqB,8BAqBT,IAAIrC,MAAM,qBArBD,iCAsBpB+E,8BAAoB1C,EAAM8C,eAtBN,8DAgE/B,MAAO,CACHhC,QACAiC,OAzCWhM,uBAEX,SACIuL,EACAD,EACApM,EACA6D,EACAiG,GALJ,2BAAA/I,EAAAC,OAAA,uDAOUqK,EAAWd,sBAAY,SAAUwC,UAASjD,GAC1CvE,EAAWyH,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAAQ3D,EAR/D,OAAAzI,EAAA,KASyBkC,oBATzB,KAUQgG,EAVR,KAWQoD,EAAQlL,QAXhB,WAAAJ,EAAA,MAYc+I,EAAOsD,cAZrB,+BAaQL,UAbR,KAcQ/M,EAAO2H,WAdf,KAeQpC,EAfR,iGASU8H,EATV,YAkBQjB,EAAYjL,QAlBpB,MAmBQkL,EAAQlL,QAnBhB,MAoBQnB,EApBR,MAqBQuL,SArBR,YAAAxK,EAAA,MAqBqBoL,EAAuBC,EAAaC,EAASrM,EAAQ6D,IArB1E,kCAqBqF4F,EArBrF,mCAsBQzJ,EAtBR,MAuBQuF,EAvBR,MAwBQ8H,EAAOC,EAxBf,MAyBQD,EAAOE,EAzBf,MA0BQF,EAAOG,EATL7C,EAjBV,mEAAA5J,EAAA,OA4B2B,EAAAsK,EAASO,aAAY6B,iBAArB,QAAyC9C,IA5BpE,eA4BUmB,EA5BV,mBAAA/K,EAAA,MA6BqBsK,EAASoC,iBAAT,MAAApC,EAA6BV,EAApB,OAAD,CAA2B,CAChDmB,SAAUA,EAASC,IAAI,KAAKb,IAAI,UA9BxC,eA6BU7J,EA7BV,yBAgCW2K,iBAAc,WAAd,GAAe3K,EAAI,wCAAnB,WAA8DsJ,EAAKsB,KAAI,SAAAC,GAAG,OAAIA,EAAIvE,kBAhC7F,+DAkCA,CAACwE,IAMDA,4B,8kCCzHR,IA0JeuB,EA1J6C,WACxD,IAAMC,EAAQC,kBAAiB,gBAC/B,EAAuEpN,qBAAWC,iBAA1EoD,EAAR,EAAQA,SAAUiG,EAAlB,EAAkBA,OAAQ+D,EAA1B,EAA0BA,kBAAmBC,EAA7C,EAA6CA,aAC7C,GADA,EAA2D3J,QACXmF,qBAAxCyE,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBACjBlB,EAAW9D,oBAAX8D,OACR,EAA8BpM,oBAAS,GAAvC,WAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,qBAAtC,WAAO0L,EAAP,KAAoB6B,EAApB,KACA,EAAgCvN,oBAAS,GAAzC,WAAOwN,EAAP,KAAiBC,EAAjB,KAUAC,KAAe,4BAAArN,EAAAC,OAAA,oDACP8I,IAAU6D,EAAMU,gBADT,wBAEPV,EAAMW,cAAcX,EAAMU,gBAAgB/B,OAAOnM,QACjDwN,EAAMY,YAAYZ,EAAMU,gBAAgB9B,OAAOpM,QAE/CS,GAAW,GACX+M,EAAMa,2BAA0B,GANzB,SAQGC,EAAehD,SAAOiD,UAAUC,KAAK,GACtCC,IAAI,IACJC,IAAI,GAVN,WAAA9N,EAAA,MAWqB8M,EAAkBF,EAAMU,gBAAgBlN,QAASqJ,WAXtE,OAWGsE,EAXH,OAYHnB,EAAMa,0BAA0B/C,SAAOiD,UAAUC,KAAKG,GAAWC,IAAIN,IAZlE,yBAcH7N,GAAW,GAdR,6CAiBP+M,EAAMW,cAAc,IACpBX,EAAMY,YAAY,IAlBX,uEAoBZ,CAACzE,EAAQ6D,EAAMU,kBAGlBD,KAAe,4BAAArN,EAAAC,OAAA,gDAEP2M,EAAMU,iBACNV,EAAMU,gBAAgBzB,aACtBe,EAAM5C,MACN4C,EAAM/D,WACN+D,EAAM9D,SAEF8D,EAAM5C,KAAKO,eAAenK,UAAYwM,EAAMU,gBAAgBlN,UACtDqL,EAAcC,8BAChBkB,EAAM5C,KAAK2B,UAAUzB,uBAAa0C,EAAM/D,YACxC+D,EAAM/D,UAAU+C,UAEdqC,EAAYvC,8BACdkB,EAAM5C,KAAK2B,UAAUzB,uBAAa0C,EAAM9D,UACxC8D,EAAM9D,QAAQ8C,UAElBgB,EAAMsB,cACFC,wBACIC,uBAAaxB,EAAM3N,OAAQ2N,EAAMU,gBAAgB1B,UAC5CZ,IAAIS,GACJtB,IAAIyC,EAAMU,gBAAgBzB,aAC1BjF,WACLgG,EAAMU,gBAAgB/B,OAAOK,WAGrCgB,EAAMyB,YACFF,wBACIC,uBAAaxB,EAAM3N,OAAQ2N,EAAMU,gBAAgB1B,UAC5CZ,IAAIiD,GACJ9D,IAAIyC,EAAMU,gBAAgBzB,aAC1BjF,WACLgG,EAAMU,gBAAgB9B,OAAOI,YAhClC,8DAqCZ,CAACgB,EAAMU,gBAAiBV,EAAM3N,OAAQ2N,EAAM5C,KAAM4C,EAAM/D,UAAW+D,EAAM9D,QAASC,IAErF,IAAMuF,EAAmB,wCAAAtO,EAAAC,OAAA,oDACjB2M,EAAMU,kBAAmBvE,EADR,oBAEXgB,EAAaqE,uBAAaxB,EAAM7C,WAAY6C,EAAM/D,UAAW+C,UAC7D2C,EAAWH,uBAAaxB,EAAM2B,SAAU3B,EAAM9D,QAAS8C,UACvD4C,EAAYJ,uBAAaxB,EAAM3N,OAAQ2N,EAAMU,gBAAgB1B,WAC/D6C,+BAAqB7B,EAAM/D,aAAc4F,+BAAqB7B,EAAM9D,SALvD,wBAMP5I,EAAQuO,+BAAqB7B,EAAM/D,WAAa+D,EAAM9D,QAAW8D,EAAM/D,UACvE6F,EAAiBD,+BAAqB7B,EAAM/D,WAAa0F,EAAWxE,EACpE4E,EAAoBF,+BAAqB7B,EAAM/D,WAAakB,EAAawE,EARlE,YAAAvO,EAAA,MASIiN,EAAmB/M,EAAOsO,EAAWE,EAAgBC,EAAmB5F,IAT5E,eASPzI,EATO,mBAAAN,EAAA,MAUPM,EAAGC,QAVI,mDAAAP,EAAA,MAYIgN,EACbJ,EAAM/D,UACN+D,EAAM9D,QACN0F,EACAzE,EACAwE,EACAxF,IAlBS,eAYPzI,EAZO,mBAAAN,EAAA,MAoBPM,EAAGC,QApBI,8DAyBnBqO,EAAW7O,uBAAY,oBAAAC,EAAAC,OAAA,qDAErB2M,EAAM7C,YACN6C,EAAM2B,UACN3B,EAAMU,iBACNV,EAAM3N,QAEN6D,GACAiG,GARqB,wBAUrBqE,GAAY,GAVS,oBAAApN,EAAA,MAaXsO,KAbW,yBAAAtO,EAAA,MAmBX+M,KAnBW,yBAAA/M,EAAA,MAoBX4M,EAAMiC,kBApBK,OAqBjBjC,EAAMkC,wBAAmBC,GArBR,yBAuBjB3B,GAAY,GAvBK,oFA0B1B,CACCR,EAAM7C,WACN6C,EAAM2B,SACN3B,EAAMU,gBACNV,EAAM3N,OACN2N,EAAMiC,eACNP,EACAvC,EACAgB,EAEAjK,EACAiG,IAGJ,OAAO,EAAP,KACO6D,GADP,IAEIhN,QAASgN,EAAMhN,SAAWA,EAC1ByL,cACA6B,iBACA0B,WACAzB,c,iBC7GF6B,GAAkB,WAEpB,GAAgB,KADIvP,qBAAWC,iBAAvB0D,QACY,OAAO,kBAAC6L,EAAA,QAAD,MAC3B,IAAM9Q,EAAIC,oBACJwO,EAAQD,IACd,OACI,kBAACuC,EAAA,QAAD,CAAMzQ,MAAO,CAAE0Q,UAAWtQ,UAAQuQ,QAC9B,kBAACC,EAAA,QAAD,CACIzC,MAAOA,EACPvN,MAAOlB,EAAE,kBACTmR,UAAWnR,EAAE,2BACboR,KAAMC,gBAIV,kBAACC,EAAA,QAAD,MACA,kBAAC,GAAD,CAAa7C,MAAOA,IACpB,kBAAC,GAAD,CAAYA,MAAOA,MAoElB8C,GAAoB,SAACxR,GAM9B,OAAIA,EAAMuC,OAAe,kBAACyO,EAAA,QAAD,MAErB,kBAACS,EAAA,QAAD,CACIC,SAAU1R,EAAM0R,SAChB9P,QAAS5B,EAAM2R,cACfnP,eAAgB,CAAE9B,aAAckR,0BAChC,kBAACC,EAAA,QAAD,CAAUtR,MAAO,CAAEuR,WAAY,WAC3B,kBAACC,EAAA,QAAD,CAAW/P,MAAOhC,EAAMgC,MAAMqL,OAAQ2E,OAAO,EAAMC,aAAa,IAChE,kBAACF,EAAA,QAAD,CAAW/P,MAAOhC,EAAMgC,MAAMsL,OAAQ0E,OAAO,EAAMC,aAAa,EAAM1R,MAAO,CAAEsJ,WAAY,KAC3F,kBAACqI,EAAA,QAAD,CAAMvI,QAAQ,EAAMC,SAAS,EAAMrJ,MAAO,CAAEsJ,WAAYlJ,UAAQ8B,OAC3DzC,EAAMgC,MAAMqL,OAAOnM,OADxB,MACmClB,EAAMgC,MAAMsL,OAAOpM,QAEtD,kBAAC8P,EAAA,QAAD,CAAMzQ,MAAO,CAAE4R,KAAM,KACpBnS,EAAM0R,SAAW,kBAACU,EAAA,QAAD,MAAgB,kBAACC,EAAA,QAAD,SAM5CC,GAAc,SAAC,GAAgD,IAA9C5D,EAA6C,EAA7CA,MACbzO,EAAIC,oBACV,OAAKwO,EAAMU,gBAIP,kBAACmD,EAAA,QAAD,CACIpR,MAAOlB,EAAE,oBACT+B,MAAO0M,EAAMU,gBACbrO,OAAQ2N,EAAM3N,OACdyR,gBAAiB9D,EAAM+D,YAPpB,kBAACC,EAAA,QAAD,CAASC,KAAM1S,EAAE,oBAAqBa,UAAU,KAYzD8R,GAAa,SAAC,GAAgD,IAAD,EAA7ClE,EAA6C,EAA7CA,MACZzO,EAAIC,oBACJY,GAAY4N,EAAMU,kBAAoBV,EAAM/D,YAAc+D,EAAM9D,QAChEgD,EAAeiF,mBAAQ,WACzB,GAAInE,EAAM/D,WAAa+D,EAAMvB,cAAgBuB,EAAM/D,UAAW,CAC1D,IAAM5J,EAASmP,uBAAaxB,EAAM7C,WAAY6C,EAAM/D,UAAU+C,UAC9D,OAAOuC,wBAAclP,EAAO+R,IAAIxG,iBAAOvL,EAAQgS,QAAOrE,EAAM/D,UAAU+C,UACnE,GAAIgB,EAAM9D,SAAW8D,EAAMvB,cAAgBuB,EAAM9D,QAAS,CAC7D,IAAM7J,EAASmP,uBAAaxB,EAAM2B,SAAU3B,EAAM9D,QAAQ8C,UAC1D,OAAOuC,wBAAclP,EAAO+R,IAAIxG,iBAAOvL,EAAQgS,QAAOrE,EAAM9D,QAAQ8C,aAEzE,CAACgB,EAAMvB,YAAauB,EAAM/D,UAAW+D,EAAM9D,QAAS8D,EAAM7C,WAAY6C,EAAM2B,WAC/E,OACI,kBAAC2C,EAAA,QAAD,MACMtE,EAAMvB,cAAgBuB,EAAM/D,WAAa+D,EAAMvB,cAAgBuB,EAAM9D,UACnE,kBAAC7K,EAAA,QAAD,CAAYgB,OAAQ6M,EAAc5M,OAAM,SAAE0N,EAAMvB,kBAAR,EAAE,EAAmBjM,OAAQJ,SAAUA,IAEnF,kBAACmS,EAAA,QAAD,CACIC,MAAOxE,EAAM/D,UAAY+D,EAAM/D,UAAUzJ,OAASjB,EAAE,aACpD0S,KAAMjE,EAAM7C,WACZ/K,SAAUA,IAEd,kBAACmS,EAAA,QAAD,CACIC,MAAOxE,EAAM9D,QAAU8D,EAAM9D,QAAQ1J,OAASjB,EAAE,aAChD0S,KAAMjE,EAAM2B,SACZvP,SAAUA,IAEd,kBAAC,GAAD,CAAU4N,MAAOA,MAMvByE,GAAW,SAAC,GAAgD,IAA9CzE,EAA6C,EAA7CA,MAChB,EAA0BjN,mBAAwB,IAAlD,WAAO2R,EAAP,KAAcC,EAAd,KACAlE,KAAe,kBAAMkE,EAAS,MAAK,CAAC3E,EAAM4E,WAAY5E,EAAM6E,SAAU7E,EAAM7C,aAC5E,IAAM2H,GAAuE9E,EAAM+E,uBAC7E3S,EAAW0S,GAAmBE,uBAAahF,EAAM3N,QACvD,OACI,kBAACiQ,EAAA,QAAD,CAAMzQ,MAAO,CAAE0Q,UAAWtQ,UAAQC,UAC5B8N,EAAMU,iBAAmBsE,uBAAahF,EAAM3N,QAC1C,kBAAC,GAAD,CAAc2N,MAAOA,EAAOzM,QAASoR,EAAUvS,UAAU,IACzDoP,uBAAaxB,EAAM3N,OAAQ2N,EAAMU,gBAAgB1B,UAAUiG,GAAGjF,EAAMU,gBAAgBwE,SACpF,kBAAC3S,EAAA,QAAD,CAA2BC,OAAQwN,EAAMU,gBAAgBlO,SACzDwN,EAAMhN,UAAYgN,EAAM5C,KACxB,kBAAC+H,EAAA,QAAD,MAEA,oCACI,kBAACxS,EAAA,QAAD,CACIW,MAAO0M,EAAMU,gBACbjN,QAASoJ,SACTjJ,UAAW,kBAAMoM,EAAMa,2BAA0B,IACjDtN,QAASoR,EACT9Q,QAASiR,IAEb,kBAAC,GAAD,CAAc9E,MAAOA,EAAOzM,QAASoR,EAAUvS,SAAUA,KAGhEsS,EAAM1N,SAA0B,OAAf0N,EAAMtM,MAAiB,kBAACgN,EAAA,QAAD,CAAcV,MAAOA,MAKpEW,GAAe,SAAC,GAQf,IAPHrF,EAOE,EAPFA,MACAzM,EAME,EANFA,QACAnB,EAKE,EALFA,SAMMb,EAAIC,oBACJ0B,EAAUC,uBAAY,WACxBI,EAAQ,IACRyM,EAAMgC,WAAWsD,MAAM/R,KACxB,CAACyM,EAAMgC,SAAUzO,IACpB,OAAO,kBAACgS,EAAA,QAAD,CAAQ9S,MAAOlB,EAAE,oBAAqBa,SAAUA,EAAUY,QAASgN,EAAMO,SAAUrN,QAASA,KAGxFsS,UA/Ne,WAC1B,IAAMjU,EAAIC,oBACV,OACI,kBAACiU,EAAA,QAAD,KACI,kBAACC,EAAA,QAAD,KACI,kBAACC,EAAA,QAAD,MACA,kBAACC,EAAA,QAAD,KACI,kBAACC,EAAA,QAAD,CAAO5B,KAAM1S,EAAE,sBACf,kBAACiS,EAAA,QAAD,CAAMsC,OAAO,GAAOvU,EAAE,0BACtB,kBAAC,GAAD,OAEa,QAAhBwU,UAASC,IAAgB,kBAACC,EAAA,QAAD,OAE9B,kBAAC,mBAAD","file":"static/js/11.fef2be40.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} style={{ borderRadius: 15 }} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n            style={{ borderRadius: 15 }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signERC2612Permit = exports.signDaiPermit = void 0;\nconst rpc_1 = require(\"./rpc\");\nconst lib_1 = require(\"./lib\");\nconst MAX_INT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nconst EIP712Domain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n];\nconst createTypedDaiData = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"holder\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"expiry\", type: \"uint256\" },\n                { name: \"allowed\", type: \"bool\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst createTypedERC2612Data = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"owner\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"value\", type: \"uint256\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"deadline\", type: \"uint256\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst NONCES_FN = '0x7ecebe00';\nconst NAME_FN = '0x06fdde03';\nconst zeros = (numZeros) => ''.padEnd(numZeros, '0');\nconst getTokenName = (provider, address) => __awaiter(void 0, void 0, void 0, function* () { return lib_1.hexToUtf8((yield rpc_1.call(provider, address, NAME_FN)).substr(130)); });\nconst getDomain = (provider, token) => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof token !== 'string') {\n        return token;\n    }\n    const tokenAddress = token;\n    const [name, chainId] = yield Promise.all([\n        getTokenName(provider, tokenAddress),\n        rpc_1.getChainId(provider),\n    ]);\n    const domain = { name, version: '1', chainId, verifyingContract: tokenAddress };\n    return domain;\n});\nexports.signDaiPermit = (provider, token, holder, spender, expiry, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        holder,\n        spender,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${holder.substr(2)}`)),\n        expiry: expiry || MAX_INT,\n        allowed: true,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedDaiData(message, domain);\n    const sig = yield rpc_1.signData(provider, holder, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\nexports.signERC2612Permit = (provider, token, owner, spender, value = MAX_INT, deadline, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        owner,\n        spender,\n        value,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${owner.substr(2)}`)),\n        deadline: deadline || MAX_INT,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedERC2612Data(message, domain);\n    const sig = yield rpc_1.signData(provider, owner, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToUtf8 = void 0;\nconst utf8_1 = __importDefault(require(\"utf8\"));\nexports.hexToUtf8 = function (hex) {\n    // if (!isHexStrict(hex))\n    //     throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n    let str = \"\";\n    let code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    let l = hex.length;\n    for (let i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8_1.default.decode(str);\n};\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        medium={true}\n        caption={true}\n        disabled={props.disabled}\n        style={{ marginLeft: Spacing.tiny, fontWeight: \"bold\" }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import { useCallback, useContext } from \"react\";\n\nimport { Percent, Router, TokenAmount } from \"@luaswap/sdk\";\nimport { signERC2612Permit } from \"eth-permit\";\nimport { ethers } from \"ethers\";\nimport { ROUTER, ZAP_IN, ZAP_OUT } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { convertToken, deduct, getContract, isNativeToken, parseCurrencyAmount } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useSDK from \"./useSDK\";\nimport useSwapRouter from \"./useSwapRouter\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useZapper = () => {\n    const { ethereum } = useContext(EthersContext);\n    const { getPair, getTrade, calculateAmountOfLPTokenMinted } = useSDK();\n    const { allowedSlippage, ttl } = useSwapRouter();\n    const zapSlippage = new Percent(\"3\", \"100\"); // 3.0%\n\n    const populateSwapData = async (\n        fromToken: Token,\n        toToken: Token,\n        amount: ethers.BigNumber,\n        provider: ethers.providers.BaseProvider,\n        signer: ethers.Signer\n    ) => {\n        const trade = await getTrade(fromToken, toToken, amount, provider);\n        if (!trade) throw new Error(\"Cannot find trade\");\n        const params = Router.swapCallParameters(trade, {\n            feeOnTransfer: false,\n            allowedSlippage,\n            recipient: ZAP_IN,\n            ttl\n        });\n        const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n        const tx = await router.populateTransaction[params.methodName](...params.args, { value: params.value });\n        return tx.data || \"\";\n    };\n\n    const zapIn = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider,\n            signer: ethers.Signer\n        ) => {\n            const pair = await getPair(fromToken, toToken, provider);\n            const amount = new TokenAmount(convertToken(fromToken), fromAmount.div(2).toString());\n            const lpTokenAmount = await calculateAmountOfLPTokenMinted(pair, amount, pair.getOutputAmount(amount)[0]);\n            if (!lpTokenAmount) throw new Error(\"Cannot calculate LP token amount\");\n            const contract = getContract(\"ZapIn\", ZAP_IN, signer);\n            const args = [\n                fromToken.address,\n                pair.liquidityToken.address,\n                fromAmount,\n                deduct(lpTokenAmount, zapSlippage),\n                ROUTER,\n                ROUTER,\n                await populateSwapData(fromToken, toToken, fromAmount.div(2), provider, signer)\n            ];\n            const value = isNativeToken(fromToken) ? fromAmount : ethers.constants.Zero;\n            const gasLimit = await contract.estimateGas.ZapIn(...args, { value });\n            const tx = await contract.ZapIn(...args, {\n                value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"ZapIn_General_V2.ZapIn()\", ...args.map(arg => arg.toString()));\n        },\n        [populateSwapData]\n    );\n\n    const getZapOutSwappedAmount = async (\n        outputToken: Token,\n        lpToken: LPToken,\n        lpTokenAmount: ethers.BigNumber,\n        provider: ethers.providers.BaseProvider\n    ) => {\n        let fromToken: Token;\n        let toToken: Token;\n        if (outputToken === lpToken.tokenA) {\n            fromToken = lpToken.tokenB;\n            toToken = lpToken.tokenA;\n        } else if (outputToken === lpToken.tokenB) {\n            fromToken = lpToken.tokenA;\n            toToken = lpToken.tokenB;\n        } else {\n            throw new Error(\"Wrong outputToken\");\n        }\n        const pair = await getPair(fromToken, toToken, provider);\n        const fromReserve = parseCurrencyAmount(pair.reserveOf(convertToken(fromToken)), fromToken.decimals);\n        const fromAmount = lpTokenAmount.mul(fromReserve).div(lpToken.totalSupply);\n        const trade = await getTrade(fromToken, toToken, fromAmount, provider);\n        if (!trade) throw new Error(\"Cannot find trade\");\n        return parseCurrencyAmount(trade.outputAmount);\n    };\n\n    const zapOut = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (\n            lpToken: LPToken,\n            outputToken: Token,\n            amount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider,\n            signer: ethers.Signer\n        ) => {\n            const contract = getContract(\"ZapOut\", ZAP_OUT, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const permit = await signERC2612Permit(\n                ethereum,\n                lpToken.address,\n                await signer.getAddress(),\n                ZAP_OUT,\n                amount.toString(),\n                deadline\n            );\n            const args = [\n                outputToken.address,\n                lpToken.address,\n                amount,\n                deduct(await getZapOutSwappedAmount(outputToken, lpToken, amount, provider), zapSlippage),\n                amount,\n                deadline,\n                permit.v,\n                permit.r,\n                permit.s\n            ];\n            const gasLimit = await contract.estimateGas.ZapOutWithPermit(...args);\n            const tx = await contract.ZapOutWithPermit(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"ZapOut_General_V1.ZapOutWithPermit()\", ...args.map(arg => arg.toString()));\n        },\n        [getZapOutSwappedAmount]\n    );\n\n    return {\n        zapIn,\n        zapOut,\n        getZapOutSwappedAmount\n    };\n};\n\nexport default useZapper;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { convertToken, formatBalance, isWrappedNativeToken, parseBalance, parseCurrencyAmount } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSwapRouter from \"./useSwapRouter\";\nimport useZapper from \"./useZapper\";\n\nexport interface RemoveLiquidityState extends LPTokensState {\n    outputToken?: Token;\n    setOutputToken: (token?: Token) => void;\n    onRemove: () => Promise<void>;\n    removing: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useRemoveLiquidityState: () => RemoveLiquidityState = () => {\n    const state = useLPTokensState(\"my-lp-tokens\");\n    const { provider, signer, getTokenAllowance, updateTokens, chainId } = useContext(EthersContext);\n    const { removeLiquidity, removeLiquidityETH } = useSwapRouter();\n    const { zapOut } = useZapper();\n    const [loading, setLoading] = useState(false);\n    const [outputToken, setOutputToken] = useState<Token>();\n    const [removing, setRemoving] = useState(false);\n\n    /*useEffect(() => {\n        setOutputToken(undefined);\n    }, [state.selectedLPToken]);\n\n    useEffect(() => {\n        state.setAmount(\"\");\n    }, [outputToken]);*/\n\n    useAsyncEffect(async () => {\n        if (signer && state.selectedLPToken) {\n            state.setFromSymbol(state.selectedLPToken.tokenA.symbol);\n            state.setToSymbol(state.selectedLPToken.tokenB.symbol);\n\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, ROUTER);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            state.setFromSymbol(\"\");\n            state.setToSymbol(\"\");\n        }\n    }, [signer, state.selectedLPToken]);\n\n    // tslint:disable-next-line:max-func-body-length\n    useAsyncEffect(async () => {\n        if (\n            state.selectedLPToken &&\n            state.selectedLPToken.totalSupply &&\n            state.pair &&\n            state.fromToken &&\n            state.toToken\n        ) {\n            if (state.pair.liquidityToken.address === state.selectedLPToken.address) {\n                const fromReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.fromToken)),\n                    state.fromToken.decimals\n                );\n                const toReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.toToken)),\n                    state.toToken.decimals\n                );\n                state.setFromAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(fromReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenA.decimals\n                    )\n                );\n                state.setToAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(toReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenB.decimals\n                    )\n                );\n            }\n        }\n    }, [state.selectedLPToken, state.amount, state.pair, state.fromToken, state.toToken, signer]);\n\n    const removeFromRouter = async () => {\n        if (state.selectedLPToken && signer) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            const toAmount = parseBalance(state.toAmount, state.toToken!.decimals);\n            const liquidity = parseBalance(state.amount, state.selectedLPToken.decimals);\n            if (isWrappedNativeToken(state.fromToken) || isWrappedNativeToken(state.toToken)) {\n                const token = isWrappedNativeToken(state.fromToken) ? state.toToken! : state.fromToken!;\n                const amountToRemove = isWrappedNativeToken(state.fromToken) ? toAmount : fromAmount;\n                const amountToRemoveETH = isWrappedNativeToken(state.fromToken) ? fromAmount : toAmount;\n                const tx = await removeLiquidityETH(token, liquidity, amountToRemove, amountToRemoveETH, signer);\n                await tx.wait();\n            } else {\n                const tx = await removeLiquidity(\n                    state.fromToken!,\n                    state.toToken!,\n                    liquidity,\n                    fromAmount,\n                    toAmount,\n                    signer\n                );\n                await tx.wait();\n            }\n        }\n    };\n\n    const onRemove = useCallback(async () => {\n        if (\n            state.fromAmount &&\n            state.toAmount &&\n            state.selectedLPToken &&\n            state.amount &&\n            // outputToken &&\n            provider &&\n            signer\n        ) {\n            setRemoving(true);\n            try {\n                // if (outputToken === state.selectedLPToken) {\n                await removeFromRouter();\n                // } else {\n                //     const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                //     const tx = await zapOut(state.selectedLPToken, outputToken, amount, provider, signer);\n                //     await tx.wait();\n                // }\n                await updateTokens();\n                await state.updateLPTokens();\n                state.setSelectedLPToken(undefined);\n            } finally {\n                setRemoving(false);\n            }\n        }\n    }, [\n        state.fromAmount,\n        state.toAmount,\n        state.selectedLPToken,\n        state.amount,\n        state.updateLPTokens,\n        removeFromRouter,\n        zapOut,\n        updateTokens,\n        // outputToken,\n        provider,\n        signer\n    ]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        outputToken,\n        setOutputToken,\n        onRemove,\n        removing\n    };\n};\n\nexport default useRemoveLiquidityState;\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport ChangeNetwork from \"../components/ChangeNetwork\";\nimport CloseIcon from \"../components/CloseIcon\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Selectable from \"../components/Selectable\";\nimport SelectIcon from \"../components/SelectIcon\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useRemoveLiquidityState, { RemoveLiquidityState } from \"../hooks/useRemoveLiquidityState\";\nimport { FEE } from \"../hooks/useSwapRouter\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport LPToken from \"../types/LPToken\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { deduct, formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst RemoveLiquidityScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"remove-liquidity\")} />\n                    <Text light={true}>{t(\"remove-liquidity-desc\")}</Text>\n                    <RemoveLiquidity />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <LiquiditySubMenu />\n        </Screen>\n    );\n};\n\nconst RemoveLiquidity = () => {\n    const { chainId } = useContext(EthersContext);\n    if (chainId !== 88) return <ChangeNetwork />;\n    const t = useTranslation();\n    const state = useRemoveLiquidityState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <LPTokenSelect\n                state={state}\n                title={t(\"your-liquidity\")}\n                emptyText={t(\"you-dont-have-liquidity\")}\n                Item={LPTokenItem}\n            />\n            {/*<Border />*/}\n            {/*<OutputTokenSelect state={state} />*/}\n            <Border />\n            <AmountInput state={state} />\n            <AmountInfo state={state} />\n        </View>\n    );\n};\n\nconst OutputTokenSelect = ({ state }: { state: RemoveLiquidityState }) => {\n    const t = useTranslation();\n    if (!state.selectedLPToken) return <Heading text={t(\"output-tokens\")} disabled={true} />;\n    const onSelectToken = (token: Token) => () => state.setOutputToken(state.outputToken ? undefined : token);\n    return (\n        <View>\n            <Heading text={t(\"output-tokens\")} />\n            <TokenOutputItem\n                token={state.selectedLPToken.tokenA}\n                otherToken={state.selectedLPToken.tokenB}\n                selected={state.outputToken === state.selectedLPToken.tokenA}\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken.tokenA}\n                onSelectToken={onSelectToken(state.selectedLPToken.tokenA)}\n            />\n            <TokenOutputItem\n                token={state.selectedLPToken.tokenB}\n                otherToken={state.selectedLPToken.tokenA}\n                selected={state.outputToken === state.selectedLPToken.tokenB}\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken.tokenB}\n                onSelectToken={onSelectToken(state.selectedLPToken.tokenB)}\n            />\n            <LPTokenOutputItem\n                token={state.selectedLPToken}\n                selected={state.outputToken === state.selectedLPToken}\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken}\n                onSelectToken={onSelectToken(state.selectedLPToken)}\n            />\n        </View>\n    );\n};\n\nconst TokenOutputItem = (props: {\n    token: Token;\n    otherToken: Token;\n    selected: boolean;\n    hidden: boolean;\n    onSelectToken: () => void;\n}) => {\n    const t = useTranslation();\n    if (props.hidden) return <View />;\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={props.onSelectToken}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenSymbol token={props.token} />\n                <Text note={true} style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    {IS_DESKTOP &&\n                        t(\"will-be-converted-to\", {\n                            fromSymbol: props.otherToken.symbol,\n                            toSymbol: props.token.symbol\n                        })}\n                </Text>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport const LPTokenOutputItem = (props: {\n    token: LPToken;\n    selected: boolean;\n    hidden: boolean;\n    onSelectToken: () => void;\n}) => {\n    if (props.hidden) return <View />;\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={props.onSelectToken}\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                    {props.token.tokenA.symbol} + {props.token.tokenB.symbol}\n                </Text>\n                <View style={{ flex: 1 }} />\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst AmountInput = ({ state }: { state: RemoveLiquidityState }) => {\n    const t = useTranslation();\n    if (!state.selectedLPToken /* || !state.outputToken*/) {\n        return <Heading text={t(\"amount-of-tokens\")} disabled={true} />;\n    }\n    return (\n        <TokenInput\n            title={t(\"amount-of-tokens\")}\n            token={state.selectedLPToken}\n            amount={state.amount}\n            onAmountChanged={state.setAmount}\n        />\n    );\n};\n\nconst AmountInfo = ({ state }: { state: RemoveLiquidityState }) => {\n    const t = useTranslation();\n    const disabled = !state.selectedLPToken || !state.fromToken || !state.toToken;\n    const outputAmount = useMemo(() => {\n        if (state.fromToken && state.outputToken === state.fromToken) {\n            const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n            return formatBalance(amount.add(deduct(amount, FEE)), state.fromToken.decimals);\n        } else if (state.toToken && state.outputToken === state.toToken) {\n            const amount = parseBalance(state.toAmount, state.toToken.decimals);\n            return formatBalance(amount.add(deduct(amount, FEE)), state.toToken.decimals);\n        }\n    }, [state.outputToken, state.fromToken, state.toToken, state.fromAmount, state.toAmount]);\n    return (\n        <InfoBox>\n            {(state.outputToken === state.fromToken || state.outputToken === state.toToken) && (\n                <AmountMeta amount={outputAmount} suffix={state.outputToken?.symbol} disabled={disabled} />\n            )}\n            <Meta\n                label={state.fromToken ? state.fromToken.symbol : t(\"1st-token\")}\n                text={state.fromAmount}\n                disabled={disabled}\n            />\n            <Meta\n                label={state.toToken ? state.toToken.symbol : t(\"2nd-token\")}\n                text={state.toAmount}\n                disabled={disabled}\n            />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst Controls = ({ state }: { state: RemoveLiquidityState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = /*state.outputToken === state.selectedLPToken && */ !state.selectedLPTokenAllowed;\n    const disabled = approveRequired || isEmptyValue(state.amount);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.selectedLPToken || isEmptyValue(state.amount) ? (\n                <RemoveButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\n            ) : state.loading || !state.pair ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <RemoveButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst RemoveButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: RemoveLiquidityState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onRemove().catch(onError);\n    }, [state.onRemove, onError]);\n    return <Button title={t(\"remove-liquidity\")} disabled={disabled} loading={state.removing} onPress={onPress} />;\n};\n\nexport default RemoveLiquidityScreen;\n"],"sourceRoot":""}