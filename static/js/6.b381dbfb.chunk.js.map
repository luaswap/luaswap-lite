{"version":3,"sources":["src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/ChangeNetwork.tsx","src/components/ErrorMessage.tsx","src/components/InfoBox.tsx","src/components/AmountMeta.tsx","src/components/Border.tsx","src/components/InsufficientBalanceButton.tsx","src/components/FetchingButton.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","src/components/ApproveButton.tsx","src/components/web/WebFooter.tsx","src/components/Notice.tsx","src/components/Input.tsx","assets/flags/us.png","assets/flags/cn.png","assets/flags/kr.png","assets/flags/fr.png","assets/flags/es.png","assets/flags/jp.png","src/hooks/useSushiBar.tsx","src/hooks/useStakingState.tsx","src/screens/StakeScreen.tsx"],"names":["Heading","props","useColors","accent","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","ChangeNetwork","chainId","t","useTranslation","networkName","88","56","justifyContent","light","textAlign","marginVertical","large","ErrorMessage","error","borderColor","borderWidth","width","padding","marginTop","code","color","note","message","InfoBox","darkMode","useContext","GlobalContext","backgroundLight","borderDark","border","useStyles","radius","backgroundColor","AmountMeta","textDark","textLight","placeholder","normal","amount","suffix","Border","InsufficientBalanceButton","symbol","title","borderRadius","FetchingButton","Meta","textMedium","onPress","useLinker","url","label","undefined","textDecorationLine","MaxButton","onPressMax","a","async","token","balance","isNativeToken","fee","pow10","gt","sub","ethers","constants","Zero","trc21Fee","updateAmount","formatBalance","decimals","position","right","bottom","type","size","maxButtonText","buttonStyle","paddingHorizontal","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","keyboardType","autoFocus","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","hideMaxButton","ApproveButton","approveToken","EthersContext","useState","loading","setLoading","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","FLAGS","us","require","cn","kr","fr","es","jp","Flag","name","locale","location","useLocation","pathname","marginHorizontal","source","WebFooter","simple","Notice","borderStyle","clear","buttonText","onPressButton","titleStyle","paddingVertical","alignSelf","Input","errors","forbidden","forEach","validation","match","regexp","allowed","join","inputStyle","minHeight","outline","placeholderTextColor","errorStyle","module","exports","useSushiBar","enter","signer","sushiBar","getContract","SUSHI_BAR","estimateGas","gasLimit","mul","div","logTransaction","toString","leave","useStakingState","getTokenAllowance","tokens","updateTokens","sushiStaked","setSushiStaked","sushiSupply","setSushiSupply","xSushiSupply","setXSushiSupply","setAmount","sushiAllowed","setSushiAllowed","xSushiAllowed","setXSushiAllowed","entering","setEntering","leaving","setLeaving","sushi","useMemo","find","xSushi","useEffect","useAsyncEffect","minAllowance","BigNumber","from","pow","sushiAllowance","gte","xSushiAllowance","sushiContract","balanceOf","totalSupply","xSushiContract","onEnter","parsed","onLeave","Staking","state","SushiBalance","AmountInput","isZero","StakeInfo","isEmptyValue","xSushiAmount","xSushiTotal","xSushiBalance","add","share","Fraction","Controls","setError","StakeButton","StakeScreen"],"mappings":"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","file":"static/js/6.b381dbfb.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle, View } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <View style={{ alignItems: \"flex-start\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 20 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {/* {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )} */}\n        </View>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nconst ChangeNetwork = ({ chainId = 88 }) => {\n    const t = useTranslation();\n    const networkName = {\n        // 1: \"Ethereum Mainnet\",\n        // 42: \"Ethereum Kovan\",\n        88: \"TomoChain Mainnet\",\n        56: \"Binance Smart Chain Mainnet\"\n    }[chainId];\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Text light={true} style={{ textAlign: \"center\", marginVertical: Spacing.large }}>\n                {t(\"change-network-to\", { networkName })}\n            </Text>\n        </View>\n    );\n};\n\nexport default ChangeNetwork;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React, { PropsWithChildren, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { backgroundLight, borderDark } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ radius: 20, color: darkMode ? borderDark : backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    // marginTop: !IS_DESKTOP ? Spacing.normal + Spacing.small : 0,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} style={{ borderRadius: 15 }} />;\n};\nexport default InsufficientBalanceButton;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"fetching\")} disabled={true} style={{ borderRadius: 15 }} />;\n};\nexport default FetchingButton;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const t = useTranslation();\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"---\"\n        : props.text\n            ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n            : t(\"fetching\");\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4, paddingBottom: 10 }}>\n            <Text note={!IS_DESKTOP} style={{ color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                note={!IS_DESKTOP}\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\",\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { BigNumber, ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n// import useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isNativeToken, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n    trc21Fee?: BigNumber;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    // const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    keyboardType={\"numeric\"}\n                    autoFocus={props.autoFocus || false}\n                    // inputStyle={{ marginHorizontal: Spacing.tiny }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                // containerStyle={{\n                //     ...border(),\n                //     paddingHorizontal: Spacing.tiny,\n                //     paddingVertical: 15\n                //     // paddingTop: 15,\n                //     // paddingBottom: 2\n                // }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                        trc21Fee={props.trc21Fee}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string; trc21Fee?: BigNumber }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(async () => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (isNativeToken(props.token)) {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            } else if (props.trc21Fee) {\n                balance = balance.gt(props.trc21Fee) ? balance.sub(props.trc21Fee) : ethers.constants.Zero\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount, props.trc21Fee]);\n\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 17 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\nfunction signer(arg0: string, address: string, signer: any, Signer: typeof ethers.Signer) {\n    throw new Error(\"Function not implemented.\");\n}\n\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n            style={{ borderRadius: 15 }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst FLAGS = {\n    us: require(\"../../../assets/flags/us.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\"),\n    fr: require(\"../../../assets/flags/fr.png\"),\n    es: require(\"../../../assets/flags/es.png\"),\n    jp: require(\"../../../assets/flags/jp.png\")\n};\n\nconst ALCHEMY_URL = \"https://dashboard.alchemyapi.io/signup?referral=429fb682-0d85-40ab-ad88-daf847cf7c63\";\n\nconst WebFooter = ({ simple = false }) => {\n    const onPressAlchemy = useLinker(ALCHEMY_URL, \"\", \"_blank\");\n    return (\n        <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n            {/* {!simple && (\n                <>\n                    <SocialIcons />\n                    <TouchableHighlight onPress={onPressAlchemy}>\n                        <Image\n                            source={require(\"../../../assets/alchemy.png\")}\n                            style={{ width: 188, height: 40, marginTop: Spacing.tiny }}\n                        />\n                    </TouchableHighlight>\n                </>\n            )}\n            <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                Built with ❤️ by SushiSwap (v{Constants.manifest.version})\n            </Text> */}\n            <FlexView style={{ marginTop: Spacing.small }}>\n                <Flag name={\"us\"} locale={\"en\"} />\n                <Flag name={\"es\"} locale={\"es\"} />\n                <Flag name={\"fr\"} locale={\"fr\"} />\n                <Flag name={\"cn\"} locale={\"zh\"} />\n                <Flag name={\"jp\"} locale={\"jp\"} />\n                <Flag name={\"kr\"} locale={\"ko\"} />\n            </FlexView>\n        </View>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={FLAGS[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color, fontSize: IS_DESKTOP ? 13 : 10 }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const { border } = useStyles();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                border(),\n                { fontSize, fontFamily: \"regular\", paddingVertical: 10, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","module.exports = __webpack_public_path__ + \"static/media/us.d367121f.png\";","module.exports = __webpack_public_path__ + \"static/media/cn.baedda5d.png\";","module.exports = __webpack_public_path__ + \"static/media/kr.146730ea.png\";","module.exports = __webpack_public_path__ + \"static/media/fr.dda60be7.png\";","module.exports = __webpack_public_path__ + \"static/media/es.82844a36.png\";","module.exports = __webpack_public_path__ + \"static/media/jp.27444bf9.png\";","import { useCallback } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport { SUSHI_BAR } from \"../constants/contracts\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nconst useSushiBar = () => {\n    const enter = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.enter(amount);\n        const tx = await sushiBar.enter(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.enter()\", amount.toString());\n    }, []);\n\n    const leave = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.leave(amount);\n        const tx = await sushiBar.leave(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.leave()\", amount.toString());\n    }, []);\n\n    return {\n        enter,\n        leave\n    };\n};\n\nexport default useSushiBar;\n","import { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { SUSHI_BAR } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { getContract, parseBalance } from \"../utils\";\nimport useSushiBar from \"./useSushiBar\";\n\nexport type StakeAction = \"sushi-balance\" | \"stake\";\nexport type UnstakeAction = \"xsushi-balance\" | \"unstake\";\n\nexport interface StakingState {\n    sushi?: Token;\n    xSushi?: Token;\n    sushiStaked?: ethers.BigNumber;\n    sushiSupply?: ethers.BigNumber;\n    xSushiSupply?: ethers.BigNumber;\n    amount: string;\n    setAmount: (amount: string) => void;\n    sushiAllowed: boolean;\n    setSushiAllowed: (allowed: boolean) => void;\n    xSushiAllowed: boolean;\n    setXSushiAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onEnter: () => Promise<void>;\n    entering: boolean;\n    onLeave: () => Promise<void>;\n    leaving: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useStakingState: () => StakingState = () => {\n    const { signer, address, getTokenAllowance, tokens, updateTokens } = useContext(EthersContext);\n    const { enter, leave } = useSushiBar();\n    const [sushiStaked, setSushiStaked] = useState<ethers.BigNumber>();\n    const [sushiSupply, setSushiSupply] = useState<ethers.BigNumber>();\n    const [xSushiSupply, setXSushiSupply] = useState<ethers.BigNumber>();\n    const [amount, setAmount] = useState(\"\");\n    const [sushiAllowed, setSushiAllowed] = useState(false);\n    const [xSushiAllowed, setXSushiAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [entering, setEntering] = useState(false);\n    const [leaving, setLeaving] = useState(false);\n\n    const sushi = useMemo(() => tokens.find(token => token.symbol === \"SUSHI\"), [tokens]);\n    const xSushi = useMemo(() => tokens.find(token => token.symbol === \"xSUSHI\"), [tokens]);\n\n    useEffect(() => {\n        setAmount(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (sushi && xSushi && signer) {\n            setSushiAllowed(false);\n            setXSushiAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const sushiAllowance = await getTokenAllowance(sushi.address, SUSHI_BAR);\n                setSushiAllowed(ethers.BigNumber.from(sushiAllowance).gte(minAllowance));\n                const xSushiAllowance = await getTokenAllowance(xSushi.address, SUSHI_BAR);\n                setXSushiAllowed(ethers.BigNumber.from(xSushiAllowance).gte(minAllowance));\n\n                const sushiContract = getContract(\"ERC20\", sushi.address, signer);\n                setSushiStaked(await sushiContract.balanceOf(SUSHI_BAR));\n                setSushiSupply(await sushiContract.totalSupply());\n                const xSushiContract = getContract(\"ERC20\", xSushi.address, signer);\n                setXSushiSupply(await xSushiContract.totalSupply());\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [sushi, xSushi, signer]);\n\n    const onEnter = useCallback(async () => {\n        if (amount && sushi && signer) {\n            setEntering(true);\n            try {\n                const parsed = parseBalance(amount, sushi.decimals);\n                const tx = await enter(parsed, signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setAmount(\"\");\n                }\n            } finally {\n                setEntering(false);\n            }\n        }\n    }, [amount, sushi, signer]);\n\n    const onLeave = useCallback(async () => {\n        if (amount && xSushi && signer) {\n            setLeaving(true);\n            try {\n                const parsed = parseBalance(amount, xSushi.decimals);\n                const tx = await leave(parsed, signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setAmount(\"\");\n                }\n            } finally {\n                setLeaving(false);\n            }\n        }\n    }, [amount, xSushi, signer]);\n\n    return {\n        sushi,\n        xSushi,\n        sushiStaked,\n        sushiSupply,\n        xSushiSupply,\n        amount,\n        setAmount,\n        sushiAllowed,\n        setSushiAllowed,\n        xSushiAllowed,\n        setXSushiAllowed,\n        loading,\n        onEnter,\n        entering,\n        onLeave,\n        leaving\n    };\n};\n\nexport default useStakingState;\n","import React, { useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport ChangeNetwork from \"../components/ChangeNetwork\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { StakingSubMenu } from \"../components/web/WebSubMenu\";\nimport { SUSHI_BAR } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useStakingState, { StakingState } from \"../hooks/useStakingState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst StakeScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"stake\")} />\n                    <Text light={true}>{t(\"stake-desc\")}</Text>\n                    <Staking />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <StakingSubMenu />\n        </Screen>\n    );\n};\n\nconst Staking = () => {\n    const { chainId } = useContext(EthersContext);\n    if (chainId !== 88) return <ChangeNetwork />;\n    const t = useTranslation();\n    const state = useStakingState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <SushiBalance state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.sushi && state.sushi.balance.isZero() && (\n                <Notice text={t(\"you-dont-have-sushi\")} color={\"orange\"} style={{ marginTop: Spacing.small }} />\n            )}\n            <StakeInfo state={state} />\n        </View>\n    );\n};\n\nconst SushiBalance = ({ state }: { state: StakingState }) => {\n    const t = useTranslation();\n    return (\n        <View>\n            <Heading text={t(\"your-sushi\")} />\n            <AmountMeta\n                amount={state.sushi ? formatBalance(state.sushi.balance, state.sushi.decimals) : \"\"}\n                suffix={\"SUSHI\"}\n            />\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: StakingState }) => {\n    const t = useTranslation();\n    if (!state.sushi || state.sushi.balance.isZero()) {\n        return <Heading text={t(\"amount-to-stake\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={t(\"amount-to-stake\")} />\n            <TokenInput\n                token={state.sushi}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst StakeInfo = ({ state }: { state: StakingState }) => {\n    const t = useTranslation();\n    const disabled =\n        !state.sushi ||\n        state.sushi.balance.isZero() ||\n        !state.xSushi ||\n        !state.sushiStaked ||\n        !state.xSushiSupply ||\n        isEmptyValue(state.amount);\n    const xSushiAmount = disabled\n        ? undefined\n        : parseBalance(state.amount, state.sushi!.decimals)\n              .mul(state.xSushiSupply!)\n              .div(state.sushiStaked!);\n    const xSushiTotal = disabled ? undefined : formatBalance(state.xSushiSupply!, state.xSushi!.decimals, 8);\n    const xSushiBalance = disabled ? undefined : state.xSushi!.balance.add(xSushiAmount!);\n    const share = disabled\n        ? undefined\n        : Fraction.from(xSushiAmount!.add(xSushiBalance!), state.xSushiSupply!).toString();\n    return (\n        <InfoBox>\n            <AmountMeta\n                amount={xSushiAmount ? formatBalance(xSushiAmount, state.xSushi!.decimals, 8) : \"\"}\n                suffix={\"xSUSHI\"}\n                disabled={disabled}\n            />\n            <Meta label={t(\"xsushi-share\")} text={share} suffix={\"%\"} disabled={disabled} />\n            <Meta label={t(\"total-xsushi\")} text={xSushiTotal} disabled={disabled} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst Controls = ({ state }: { state: StakingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.sushi || state.sushi.balance.isZero() || isEmptyValue(state.amount) ? (\n                <StakeButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.sushi.decimals).gt(state.sushi.balance) ? (\n                <InsufficientBalanceButton symbol={state.sushi.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.sushi}\n                        spender={SUSHI_BAR}\n                        onSuccess={() => state.setSushiAllowed(true)}\n                        onError={setError}\n                        hidden={state.sushiAllowed}\n                    />\n                    <StakeButton state={state} onError={setError} disabled={!state.sushiAllowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst StakeButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: StakingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const onPress = async () => {\n        onError({});\n        try {\n            await state.onEnter();\n            state.setAmount(\"\");\n        } catch (e) {\n            onError(e);\n        }\n    };\n    return <Button title={t(\"stake\")} loading={state.entering} onPress={onPress} disabled={disabled} />;\n};\n\nexport default StakeScreen;\n"],"sourceRoot":""}